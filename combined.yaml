openapi: 3.0.0
info:
  title: Combined API
  version: 1.0.0
paths:
  /api/v1/account-types:
    get:
      tags:
        - account
      summary: получить список доступных "Типов счетов"
      description: возвращает все значения "Типов счетов"
      parameters:
        - name: accessToken
          in: header
          description: токен авторизации
          required: true
          schema:
            type: string
            format: uuid
          example: a1b2c3d4-e5f6-7890-g1h2-i3j4k5l6m7n8
        - name: type_name
          in: query
          description: выводит все возможные типы счетов с его параметрами
          required: false
          schema:
            type: string
          example: Премиум
      responses:
        '200':
          description: список доступных текущих счетов
          content:
            application/json:
              schema:
                type: object
                properties:
                  account_types:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          format: uuid
                          example: d0e63be2-6bdd-4b74-97ab-19e76f5a78b2
                        typeName:
                          type: string
                          example: Премиум
                        openingFee:
                          type: number
                          format: float
                          example: 0
                        currency:
                          type: string
                          example: RUB
                        maintenanceFee:
                          type: number
                          format: float
                          example: 100
                        internalTransferFeeMin:
                          type: number
                          format: float
                          example: 0
                        internalTransferFeeMax:
                          type: number
                          format: float
                          example: 1
                        externalTransferFeeMin:
                          type: number
                          format: float
                          example: 0
                        externalTransferFeeMax:
                          type: number
                          format: float
                          example: 1
                        atmWithdrawalFeeMin:
                          type: number
                          format: float
                          example: 0
                        atmWithdrawalFeeMax:
                          type: number
                          format: float
                          example: 0
                        withdrawalLimitFree:
                          type: integer
                          example: 5
                        interestRate:
                          type: number
                          format: float
                          example: 0
                        monthlyFee:
                          type: number
                          format: float
                          example: 100
                        availabilityAutoPayments:
                          type: boolean
                          example: true
                        availabilityInternetBanking:
                          type: boolean
                          example: true
                        availabilityCard:
                          type: boolean
                          example: true
                      required:
                        - id
                        - typeName
                        - openingFee
                        - currency
                        - maintenanceFee
                        - internalTransferFeeMin
                        - internalTransferFeeMax
                        - externalTransferFeeMin
                        - externalTransferFeeMax
                        - atmWithdrawalFeeMin
                        - atmWithdrawalFeeMax
                        - withdrawalLimitFree
                        - interestRate
                        - monthlyFee
                        - availabilityAutoPayments
                        - availabilityInternetBanking
                        - availabilityCard
        '401':
          description: Требуется авторизация
          content:
            application/json:
              schema:
                $ref: '#/paths/~1api~1v1~1accounts/get/responses/401/content/application~1json/schema'
              examples:
                unauthorized:
                  value:
                    uri: /api/v1/account-types
                    statusCode: 401
                    error: UNAUTHORIZED
                    Message: Требуется авторизация
                    timestamp: '2024-09-03T09:50:05Z'
        '403':
          description: Доступ запрещен
          content:
            application/json:
              schema:
                $ref: '#/paths/~1api~1v1~1accounts/get/responses/401/content/application~1json/schema'
              examples:
                forbidden:
                  value:
                    uri: /api/v1/account-types
                    statusCode: 403
                    error: FORBIDDEN
                    message: У вас нет прав на выполнение этой операции
                    timestamp: '2024-09-03T09:50:05Z'
        '404':
          description: NOT FOUND
          content:
            application/json:
              schema:
                $ref: '#/paths/~1api~1v1~1accounts/get/responses/401/content/application~1json/schema'
              examples:
                internalServerError:
                  value:
                    uri: /api/v1/account-types
                    statusCode: 404
                    error: NOT FOUND
                    message: Запрашиваемого файла/ресурса нет.
                    timestamp: '2024-09-03T09:50:05Z'
        '500':
          description: Внутренняя ошибка сервера
          content:
            application/json:
              schema:
                $ref: '#/paths/~1api~1v1~1accounts/get/responses/401/content/application~1json/schema'
              examples:
                internalServerError:
                  value:
                    uri: /api/v1/account-types
                    statusCode: 500
                    error: INTERNAL SERVER ERROR
                    message: Внутренняя ошибка сервера. Повторите ошибку позже
                    timestamp: '2024-09-03T09:50:05Z'
  /api/v1/accounts:
    get:
      tags:
        - account
      summary: получить список всех счетов клиента
      description: возвращает массив счетов
      parameters:
        - name: customerId
          in: query
          description: уникальный идентификатор клиента по которому делается выборка
          required: false
          schema:
            type: string
          example: d0e63be2-6bdd-4b74-97ab-19e76f5a78b2
      responses:
        '200':
          description: список счетов клиента
          content:
            application/json:
              schema:
                type: object
                properties:
                  accounts:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          example: d0e63be2-6bdd-4b74-97ab-19e76f5a78b2
                        accountNumber:
                          type: string
                          example: '40802810800000003298'
                        customerId:
                          type: string
                          example: d0e63be2-6bdd-4b74-97ab-19e76f5a78b2
                        accountTypeId:
                          type: string
                          example: d0e63be2-6bdd-4b74-97ab-19e76f5a78b2
                        isActive:
                          type: boolean
                          example: true
                        balanceId:
                          type: string
                          example: d0e63be2-6bdd-4b74-97ab-19e76f5a78b2
                        openDate:
                          type: string
                          example: '2021-12-28'
                        closeDate:
                          type: string
                          nullable: true
                          example: null
                        autoPayments:
                          type: boolean
                          example: true
                        internetBanking:
                          type: boolean
                          example: true
                        typeName:
                          type: string
                          example: Премиум
                      required:
                        - id
                        - accountNumber
                        - customerId
                        - accountTypeId
                        - openDate
                        - typeName
        '401':
          description: Требуется авторизация
          content:
            application/json:
              schema:
                type: object
                properties:
                  uri:
                    type: string
                    example: /api/v1/debit-card-products/names
                  statusCode:
                    type: number
                    example: 500
                  errorMessage:
                    type: string
                    example: Внутренняя ошибка сервера. Повторите попытку позже.
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-09-03T09:50:05Z'
                required:
                  - uri
                  - statusCode
                  - errorMessage
                  - timestamp
              examples:
                unauthorized:
                  value:
                    uri: /api/v1/accounts
                    statusCode: 401
                    errorMessage: Требуется авторизация
                    timestamp: '2024-09-03T09:50:05Z'
    post:
      tags:
        - account
      summary: открыть счет клиенту
      description: открывается счет
      parameters:
        - name: accessToken
          in: header
          description: токен авторизации
          required: true
          schema:
            type: string
            format: uuid
          example: a1b2c3d4-e5f6-7890-g1h2-i3j4k5l6m7n8
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - accountType
                - customer_id
                - auto_payments
                - internet_banking
                - card
              properties:
                cardProductId:
                  type: string
                  format: uuid
                  example: d0e63be2-6bdd-4b74-97ab-19e76f5a78b2
                customerId:
                  type: string
                  format: uuid
                  example: d0e63be2-6bdd-4b74-97ab-19e76f5a78b2
                accountId:
                  type: string
                  format: uuid
                  example: d0e63be2-6bdd-4b74-97ab-19e76f5a78b2
                cardsID:
                  type: string
                  format: uuid
                  example: d0e63be2-6bdd-4b74-97ab-19e76f5a78b2
                services:
                  type: array
                  items:
                    type: string
                    format: uuid
                  example:
                    - d0e63be2-6bdd-4b74-97ab-19e76f5a78b2
      responses:
        '201':
          description: Успешное открытие счета
          content:
            application/json:
              schema:
                type: object
                required:
                  - message
                  - account_number
                  - auto_payments
                  - internet_banking
                properties:
                  id:
                    type: string
                    format: uuid
                    example: b5f355b3-c3fe-42c9-a759-b5dce7c2ea7c
                  accountNumber:
                    type: string
                    example: '40702810500012345678'
                  customerId:
                    type: string
                    format: uuid
                    example: b5f355b3-c3fe-42c9-a759-b5dce7c2ea7c
                  typeAccountId:
                    type: string
                    format: uuid
                    example: b5f355b3-c3fe-42c9-a759-b5dce7c2ea7c
                  isActive:
                    type: boolean
                    example: true
                  balanceId:
                    type: string
                    format: uuid
                    example: b5f355b3-c3fe-42c9-a759-b5dce7c2ea7c
                  openDate:
                    type: string
                    format: date
                    example: '2010-12-12'
                  closeDate:
                    type: string
                    format: date
                    example: '2010-12-12'
                  autoPayments:
                    type: boolean
                    example: true
                  internetBanking:
                    type: boolean
                    example: true
                  main:
                    type: boolean
                    example: true
                  cardId:
                    type: string
                    format: uuid
                    example: b5f355b3-c3fe-42c9-a759-b5dce7c2ea7c
        '401':
          description: Требуется авторизация
          content:
            application/json:
              schema:
                $ref: '#/paths/~1api~1v1~1accounts/get/responses/401/content/application~1json/schema'
              examples:
                unauthorized:
                  value:
                    uri: /api/v1/accounts
                    statusCode: 401
                    error: UNAUTHORIZED
                    Message: Требуется авторизация
                    timestamp: '2024-09-03T09:50:05Z'
        '403':
          description: Доступ запрещен
          content:
            application/json:
              schema:
                $ref: '#/paths/~1api~1v1~1accounts/get/responses/401/content/application~1json/schema'
              examples:
                forbidden:
                  value:
                    uri: /api/v1/accounts
                    statusCode: 403
                    error: FORBIDDEN
                    message: У вас нет прав на выполнение этой операции
                    timestamp: '2024-09-03T09:50:05Z'
        '500':
          description: Внутренняя ошибка сервера
          content:
            application/json:
              schema:
                $ref: '#/paths/~1api~1v1~1accounts/get/responses/401/content/application~1json/schema'
              examples:
                internalServerError:
                  value:
                    uri: /api/v1/accounts
                    statusCode: 500
                    error: INTERNAL SERVER ERROR
                    message: Внутренняя ошибка сервера. Повторите ошибку позже
                    timestamp: '2024-09-03T09:50:05Z'
  /api/card-products(fromAccountAdd):
    get:
      tags:
        - card
      summary: получить список названий активных дебетовых карточных продуктов
      description: Возвращает массив названий активных дебетовых карточных продуктов.
      parameters:
        - name: accessToken
          in: header
          description: токен авторизации
          required: true
          schema:
            type: string
            format: uuid
          example: a1b2c3d4-e5f6-7890-g1h2-i3j4k5l6m7n8
        - name: cardType
          in: query
          description: фильтрация по типу дебетового карточного продукта
          required: false
          schema:
            type: string
          example: DEBET
        - name: isActive
          in: query
          description: фильтрация по статусу дебетового карточного продукта
          required: false
          schema:
            type: boolean
          example: true
      responses:
        '200':
          description: список карточных продуктов
          content:
            application/json:
              schema:
                type: object
                properties:
                  cardProducts:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          example: d0e63be2-6bdd-4b74-97ab-19e76f5a78b2
                        name:
                          type: string
                          example: ЛибертиКарта
                        description:
                          type: string
                          example: 'универсальная карта, которая подойдет всем'
                        cardType:
                          type: string
                          example: DEBET
                        currency:
                          type: string
                          example: RUB
                        paymentSystem:
                          type: string
                          example: MIR
                        expiration:
                          type: integer
                          example: 36
                        createdAt:
                          type: string
                          example: '2025-10-19 10:23:54+02'
                        createdBy:
                          type: string
                          example: b5f355b3-c3fe-42c9-a759-b5dce7c2ea7c
                        deletedAt:
                          type: string
                          example: '2025-10-19 10:23:54+02'
                          nullable: true
                        deletedBy:
                          type: string
                          example: b5f355b3-c3fe-42c9-a759-b5dce7c2ea7c
                          nullable: true
                        isActive:
                          type: boolean
                          example: true
                        cardImageLink:
                          type: string
                          example: 'https://i.ibb.co/b0WWP1t/image.png'
                        slogan:
                          type: string
                          example: Максимум выгоды за покупки в любимых супермаркетах
                        gracePeriodDays:
                          type: integer
                          example: 10
                          nullable: true
                        creditLimit:
                          type: number
                          example: 48000
                          nullable: true
                      required:
                        - id
                        - name
                        - description
                        - cardType
                        - currency
                        - paymentSystem
                        - expiration
                        - createdAt
                        - createdBy
                        - deletedAt
                        - deletedBy
                        - isActive
                        - cardImageLink
                        - slogan
                        - gracePeriodDays
                        - creditLimit
        '401':
          description: Требуется авторизация
          content:
            application/json:
              schema:
                $ref: '#/paths/~1api~1v1~1accounts/get/responses/401/content/application~1json/schema'
              examples:
                unauthorized:
                  value:
                    uri: /api/v1/card-products
                    statusCode: 401
                    error: UNAUTHORIZED
                    message: Требуется авторизация
                    timestamp: '2024-09-03T09:50:05Z'
        '403':
          description: Доступ запрещен
          content:
            application/json:
              schema:
                $ref: '#/paths/~1api~1v1~1accounts/get/responses/401/content/application~1json/schema'
              examples:
                forbidden:
                  value:
                    uri: /api/v1/card-products
                    statusCode: 403
                    error: FORBIDDEN
                    Message: У вас нет прав на выполнение этой операции
                    timestamp: '2024-09-03T09:50:05Z'
        '404':
          description: NOT FOUND
          content:
            application/json:
              schema:
                $ref: '#/paths/~1api~1v1~1accounts/get/responses/401/content/application~1json/schema'
              examples:
                internalServerError:
                  value:
                    uri: /api/v1/card-products
                    statusCode: 404
                    error: NOT FOUND
                    message: Запрашиваемого файла/ресурса нет.
                    timestamp: '2024-09-03T09:50:05Z'
        '500':
          description: внутренняя ошибка сервера
          content:
            application/json:
              schema:
                $ref: '#/paths/~1api~1v1~1accounts/get/responses/401/content/application~1json/schema'
              examples:
                internalServerError:
                  value:
                    uri: /api/v1/card-products
                    statusCode: 500
                    error: INTERNAL SERVER ERROR
                    Message: Внутренняя ошибка сервера. Повторите попытку позже.
                    timestamp: '2024-09-03T09:50:05Z'
  /api/card-services(fromAccountAdd):
    get:
      tags:
        - card
      summary: получить список дополнительных услуг
      description: Возвращает массив с дополнительными услугами.
      parameters:
        - name: accessToken
          in: header
          description: токен авторизации
          required: true
          schema:
            type: string
            format: uuid
          example: a1b2c3d4-e5f6-7890-g1h2-i3j4k5l6m7n8
        - name: isActive
          in: query
          description: фильтрация по статусу дополнительной услуги
          required: false
          schema:
            type: boolean
          example: true
      responses:
        '200':
          description: список дополнительных услуг
          content:
            application/json:
              schema:
                type: object
                properties:
                  services:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          example: d0e63be2-6bdd-4b74-97ab-19e76f5a78b2
                        type:
                          type: string
                          example: SMS
                        name:
                          type: string
                          example: СМС-информирование
                        isActive:
                          type: boolean
                          example: true
                      required:
                        - id
                        - type
                        - name
                        - isActive
        '401':
          description: Требуется авторизация
          content:
            application/json:
              schema:
                $ref: '#/paths/~1api~1v1~1accounts/get/responses/401/content/application~1json/schema'
              examples:
                unauthorized:
                  value:
                    uri: /api/v1/card-service
                    statusCode: 401
                    error: UNAUTHORIZED
                    message: Требуется авторизация
                    timestamp: '2024-09-03T09:50:05Z'
        '403':
          description: Доступ запрещен
          content:
            application/json:
              schema:
                $ref: '#/paths/~1api~1v1~1accounts/get/responses/401/content/application~1json/schema'
              examples:
                forbidden:
                  value:
                    uri: /api/v1/card-service
                    statusCode: 403
                    error: FORBIDDEN
                    Message: У вас нет прав на выполнение этой операции
                    timestamp: '2024-09-03T09:50:05Z'
        '404':
          description: NOT FOUND
          content:
            application/json:
              schema:
                $ref: '#/paths/~1api~1v1~1accounts/get/responses/401/content/application~1json/schema'
              examples:
                internalServerError:
                  value:
                    uri: /api/v1/card-service
                    statusCode: 404
                    error: NOT FOUND
                    message: Запрашиваемого файла/ресурса нет.
                    timestamp: '2024-09-03T09:50:05Z'
        '500':
          description: внутренняя ошибка сервера
          content:
            application/json:
              schema:
                $ref: '#/paths/~1api~1v1~1accounts/get/responses/401/content/application~1json/schema'
              examples:
                internalServerError:
                  value:
                    uri: /api/v1/card-service
                    statusCode: 500
                    error: INTERNAL SERVER ERROR
                    Message: Внутренняя ошибка сервера. Повторите попытку позже.
                    timestamp: '2024-09-03T09:50:05Z'
  /api/debit-card(fromAccountAdd):
    post:
      tags:
        - card
      summary: оформить дебетовую карту клиенту
      description: Создает новую дебетовую карту для клиента.
      parameters:
        - name: accessToken
          in: header
          description: токен авторизации
          required: true
          schema:
            type: string
            format: uuid
          example: a1b2c3d4-e5f6-7890-g1h2-i3j4k5l6m7n8
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                customerId:
                  type: string
                  description: Идентификатор клиента
                  example: d0e63be2-6bdd-4b74-97ab-19e76f5a78b2
                cardHolder:
                  type: string
                  description: имя и фамилия держателя карты на латинице
                  example: ALEKSANDR IVANOV
                currentAccountId:
                  type: string
                  description: Идентификатор текущего счета клиента
                  example: d0e63be2-6bdd-4b74-97ab-19e76f5a78b2
                serviceIds:
                  type: array
                  default: []
                  items:
                    type: string
                  description: |
                    Подключаемые дополнительные услуги. Если пустой массив - то услуги не подключаются.
                  example:
                    - d0e63be2-6bdd-4b74-97ab-19e76f5a78b2
              required:
                - customerId
                - cardHolder
                - currentAccountId
                - serviceIds
      responses:
        '201':
          description: Успешное создание дебетовой карты клиента
          content:
            application/json:
              schema:
                type: object
                properties:
                  credentialsId:
                    type: string
                    example: d0e63be2-6bdd-4b74-97ab-19e76f5a78b2
                  cardId:
                    type: string
                    example: d0e63be2-6bdd-4b74-97ab-19e76f5a78b2
                  cardNumber:
                    type: string
                    example: '1111222233334444'
                  cardHolder:
                    type: string
                    example: ALEKSANDR IVANOV
                  expirationDate:
                    type: string
                    example: 09/26
                  customerId:
                    type: string
                    example: d0e63be2-6bdd-4b74-97ab-19e76f5a78b2
                  customerFirstName:
                    type: string
                    example: Александр
                  customerLastName:
                    type: string
                    example: Иванов
                  customerPatronymic:
                    type: string
                    nullable: true
                    example: Петрович
                  accountId:
                    type: string
                    example: d0e63be2-6bdd-4b74-97ab-19e76f5a78b2
                required:
                  - credentialsId
                  - cardId
                  - cardNumber
                  - cardHolder
                  - expirationDate
                  - customerId
                  - customerFirstName
                  - customerLastName
                  - accountId
        '401':
          description: Требуется авторизация
          content:
            application/json:
              schema:
                $ref: '#/paths/~1api~1v1~1accounts/get/responses/401/content/application~1json/schema'
              examples:
                unauthorized:
                  value:
                    uri: /api/v1/debit-card
                    statusCode: 401
                    error: UNAUTHORIZED
                    message: Требуется авторизация
                    timestamp: '2024-09-03T09:50:05Z'
        '403':
          description: Доступ запрещен
          content:
            application/json:
              schema:
                $ref: '#/paths/~1api~1v1~1accounts/get/responses/401/content/application~1json/schema'
              examples:
                forbidden:
                  value:
                    uri: /api/v1/debit-card
                    statusCode: 403
                    error: FORBIDDEN
                    errorMessage: У вас нет прав на выполнение этой операции
                    timestamp: '2024-09-03T09:50:05Z'
        '500':
          description: Внутренняя ошибка сервера
          content:
            application/json:
              schema:
                $ref: '#/paths/~1api~1v1~1accounts/get/responses/401/content/application~1json/schema'
              examples:
                internalServerError:
                  value:
                    uri: /api/v1/debit-card
                    statusCode: 500
                    error: INTERNAL SERVER ERROR
                    Message: Внутренняя ошибка сервера. Повторите попытку позже.
                    timestamp: '2024-09-03T09:50:05Z'
  '/customers/{id}/details':
    get:
      tags:
        - customer
      summary: Данные клиента
      description: Запрос на личные данные клиента для предзаполнения заявления
      parameters:
        - name: accessToken
          in: header
          description: токен авторизации
          required: true
          schema:
            type: string
            format: uuid
          example: a1b2c3d4-e5f6-7890-g1h2-i3j4k5l6m7n8
        - name: customerId
          in: path
          description: айди клиента для идентификации его в бд
          required: true
          schemas:
            type: string
            format: uuid
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  lastName:
                    type: string
                    example: Иванов
                  firstName:
                    type: string
                    example: Иван
                  patronymic:
                    type: string
                    example: Иванович
                  birthDate:
                    type: string
                    example: '2010-07-20'
                  snPassport:
                    type: string
                    example: '1234567890'
                  issueDate:
                    type: string
                    example: '2010-07-20'
                  itn:
                    type: string
                    example: '123456789012'
                  snils:
                    type: string
                    example: 123-456-789 01
                  regAddress:
                    type: string
                    example: 'Ленина, д.10, кв.5'
                  factAddress:
                    type: string
                    example: 'Ленина, д.10, кв.5'
                  phoneNumber:
                    type: string
                    example: +7 (123) 456-78-90
                  email:
                    type: string
                    example: ivanov@email.ru
                  typeOfEmployment:
                    type: string
                    example: Постоянная работа
                  placeOfEmployment:
                    type: string
                    example: Ростелеком
                  position:
                    type: string
                    example: Менеджер
        '401':
          description: Требуется авторизация
          content:
            application/json:
              schema:
                $ref: '#/paths/~1api~1v1~1accounts/get/responses/401/content/application~1json/schema'
              examples:
                unauthorized:
                  value:
                    uri: /api/v1/customers/d0e63be2-6bdd-4b74-97ab-19e76f5a78b2/details
                    statusCode: 401
                    error: UNAUTHORIZED
                    message: Требуется авторизация
                    timestamp: '2024-09-03T09:50:05Z'
        '403':
          description: Доступ запрещен
          content:
            application/json:
              schema:
                $ref: '#/paths/~1api~1v1~1accounts/get/responses/401/content/application~1json/schema'
              examples:
                forbidden:
                  value:
                    uri: /api/v1/customers/d0e63be2-6bdd-4b74-97ab-19e76f5a78b2/details
                    statusCode: 403
                    error: FORBIDDEN
                    Message: У вас нет прав на выполнение этой операции
                    timestamp: '2024-09-03T09:50:05Z'
        '404':
          description: NOT FOUND
          content:
            application/json:
              schema:
                $ref: '#/paths/~1api~1v1~1accounts/get/responses/401/content/application~1json/schema'
              examples:
                internalServerError:
                  value:
                    uri: /api/v1/customers/d0e63be2-6bdd-4b74-97ab-19e76f5a78b2/details
                    statusCode: 404
                    error: NOT FOUND
                    message: Запрашиваемого файла/ресурса нет.
                    timestamp: '2024-09-03T09:50:05Z'
        '500':
          description: Внутренняя ошибка
          content:
            application/json:
              examples:
                internalServerError:
                  value:
                    uri: /api/v1/customers/d0e63be2-6bdd-4b74-97ab-19e76f5a78b2/details
                    statusCode: 500
                    error: INTERNAL SERVER ERROR
                    Message: Внутренняя ошибка сервера. Повторите попытку позже.
                    timestamp: '2024-09-03T09:50:05Z'
  /api/v1/accounts(fromAccountView):
    get:
      tags:
        - account
      summary: получить список всех счетов клиента
      description: возвращает массив счетов
      parameters:
        - name: customerId
          in: query
          description: уникальный идентификатор клиента по которому делается выборка
          required: false
          schema:
            type: string
          example: d0e63be2-6bdd-4b74-97ab-19e76f5a78b2
      responses:
        '200':
          description: список счетов клиента
          content:
            application/json:
              schema:
                type: object
                properties:
                  accounts:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          example: d0e63be2-6bdd-4b74-97ab-19e76f5a78b2
                        accountNumber:
                          type: string
                          example: '40802810800000003298'
                        customerId:
                          type: string
                          example: d0e63be2-6bdd-4b74-97ab-19e76f5a78b2
                        accountTypeId:
                          type: string
                          example: d0e63be2-6bdd-4b74-97ab-19e76f5a78b2
                        isActive:
                          type: boolean
                          example: true
                        balanceId:
                          type: string
                          example: d0e63be2-6bdd-4b74-97ab-19e76f5a78b2
                        openDate:
                          type: string
                          example: '2021-12-28'
                        closeDate:
                          type: string
                          nullable: true
                          example: null
                        autoPayments:
                          type: boolean
                          example: true
                        internetBanking:
                          type: boolean
                          example: true
                        typeName:
                          type: string
                          example: Премиум
                      required:
                        - id
                        - accountNumber
                        - customerId
                        - accountTypeId
                        - openDate
                        - typeName
        '401':
          description: Требуется авторизация
          content:
            application/json:
              schema:
                type: object
                properties:
                  uri:
                    type: string
                    example: /api/v1/accounts
                  statusCode:
                    type: number
                    example: 500
                  errorMessage:
                    type: string
                    example: Внутренняя ошибка сервера. Повторите попытку позже.
                required:
                  - uri
                  - statusCode
                  - errorMessage
              examples:
                unauthorized:
                  value:
                    uri: /api/v1/accounts
                    statusCode: 401
                    errorMessage: Требуется авторизация
                    timestamp: '2024-09-03T09:50:05Z'
  /cards/status/activate:
    patch:
      security:
        - bearerAuth: []
      tags:
        - Авторизация
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                cardId:
                  type: string
                  example: b5f355b3-c3fe-42c9-a759-b5dce7c2ea7c
                  description: Номер обновляемой карты в базе
              required:
                - cardId
      summary: Установка статуса карты "Активна"
      description: Смена статуса карты из списка дебетовых карт клиента на "Активна"
      responses:
        '200':
          description: Успешная установка статуса карты
        '500':
          description: Внутренняя ошибка сервера
          content:
            application/json:
              schema:
                type: object
                required:
                  - error
                  - message
                properties:
                  error:
                    type: string
                    description: Пояснение к коду состояния
                  message:
                    type: string
                    description: Сообщение об ошибке
              example:
                error: INTERNAL SERVER ERROR
                message: Unsuccessful operation. Try later
  /customer-cards:
    get:
      summary: Получить информацию по карте
      tags:
        - Сustomer Cards
      description: Получить информацию по карте
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: customerId
          description: ID клиента
          required: true
          schema:
            type: string
        - in: query
          name: cardType
          description: Тип карты
          required: true
          schema:
            type: string
            enum:
              - debit
              - credit
      responses:
        '200':
          description: Успешное выполнение
          content:
            application/json:
              schema:
                type: array
                items:
                  required:
                    - credit_account_id
                    - cardImageLink
                    - name
                    - status
                    - cardNumberMasked
                    - expirationDate
                  type: object
                  properties:
                    credit_account_id:
                      type: string
                      example: b5f355b3-c3fe-42c9-a759-b5dce7c2ea7c
                    cardId:
                      type: string
                      example: d0e63be2-6bdd-4b74-97ab-19e76f5a78b2
                    cardImageLink:
                      type: string
                      format: uri
                      example: 'https://ibb.co/hRyrXgxc/image.png'
                    name:
                      type: string
                      example: Кредитная карта с льготным периодом
                    status:
                      type: string
                      enum:
                        - Активен
                        - Заблокирован
                        - Ожидает активации
                    cardNumberMasked:
                      type: string
                      example: 220000******1234
                    expirationDate:
                      type: string
                      format: date
                    available_limit:
                      type: number
                      format: double
                      example: 12455.12
                    currency:
                      type: string
                      example: RUB
        '400':
          description: Некорректный запрос
          content:
            application/json:
              schema:
                $ref: '#/paths/~1card_credits/get/responses/400/content/application~1json/schema'
              examples:
                BadRequest:
                  value:
                    timestamp: '2024-09-03T09:50:05Z'
                    status: 400
                    error: Bad Request
                    message: 'Некорректный запрос. Убедитесь, что параметры указаны верно, и попробуйте еще раз'
                    path: api/v1/customer-cards
        '401':
          description: Не авторизован
          content:
            application/json:
              schema:
                $ref: '#/paths/~1card_credits/get/responses/400/content/application~1json/schema'
              examples:
                Unauthorized:
                  value:
                    timestamp: '2024-09-03T09:50:05Z'
                    status: 401
                    error: Unauthorized
                    message: 'Для выполнения данной операции требуется авторизация. Пожалуйста, авторизуйтесь и попробуйте еще раз'
                    path: api/v1/customer-cards
        '500':
          description: Внутренняя ошибка сервера
          content:
            application/json:
              schema:
                $ref: '#/paths/~1card_credits/get/responses/400/content/application~1json/schema'
              examples:
                InternalServerError:
                  value:
                    timestamp: '2024-09-03T09:50:05Z'
                    status: 500
                    error: Internal Server Error
                    message: Сервис временно недоступен. Повторите попытку позже
                    path: api/v1/customer-cards
  /card_credits:
    get:
      summary: Получить данные по доступному балансу кредитной карты
      tags:
        - card_credits
      description: Получить данные по доступному балансу кредитной карты
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: credit_account_Ids
          description: ID кредитных счетов клиента
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Успешное выполнение
          content:
            application/json:
              schema:
                type: array
                items:
                  required:
                    - available_limit
                    - currency
                  type: object
                  properties:
                    available_limit:
                      type: number
                      format: double
                      example: 3000
                    currency:
                      type: string
                      example: RUB
        '400':
          description: Некорректный запрос
          content:
            application/json:
              schema:
                required:
                  - timestamp
                  - status
                  - error
                  - message
                  - paths
                type: object
                properties:
                  message:
                    type: string
                  error:
                    type: string
                  paths:
                    type: string
                  status:
                    type: integer
                  timestamp:
                    type: string
                    format: date-time
              examples:
                BadRequest:
                  value:
                    timestamp: '2024-09-03T09:50:05Z'
                    status: 400
                    error: Bad Request
                    message: 'Некорректный запрос. Убедитесь, что параметры указаны верно, и попробуйте еще раз'
                    path: api/v1/card_credits
        '401':
          description: Не авторизован
          content:
            application/json:
              schema:
                $ref: '#/paths/~1card_credits/get/responses/400/content/application~1json/schema'
              examples:
                Unauthorized:
                  value:
                    timestamp: '2024-09-03T09:50:05Z'
                    status: 401
                    error: Unauthorized
                    message: 'Для выполнения данной операции требуется авторизация. Пожалуйста, авторизуйтесь и попробуйте еще раз'
                    path: api/v1/card_credits
        '500':
          description: Внутренняя ошибка сервера
          content:
            application/json:
              schema:
                $ref: '#/paths/~1card_credits/get/responses/400/content/application~1json/schema'
              examples:
                InternalServerError:
                  value:
                    timestamp: '2024-09-03T09:50:05Z'
                    status: 500
                    error: Internal Server Error
                    message: Сервис временно недоступен. Повторите попытку позже
                    path: api/v1/card_credits
  /creditcard/cards:
    get:
      tags:
        - cards
      summary: получить список всех кредитных карточных продуктов клиента
      description: возвращает список кредитных карточных продуктов
      parameters:
        - name: customerId
          in: query
          description: уникальный идентификатор клиента по которому делается выборка
          required: true
          schema:
            type: string
          example: d0e63be2-6bdd-4b74-97ab-19e76f5a78b2
      responses:
        '200':
          description: список кредитных карточных продуктов клиента
          content:
            application/json:
              schema:
                type: object
                properties:
                  creditCards:
                    type: array
                    items:
                      type: object
                      properties:
                        cardNumberMasked:
                          type: string
                          example: 220100******1234
                        name:
                          type: string
                          example: ЛибертиКарта
                        cardStatus:
                          type: string
                          example: Активна
                        expirationDate:
                          type: string
                          example: 7.27
                        accountNumber:
                          type: string
                          example: 40802810823200010000
                      required:
                        - name
                        - cardStatus
                        - expirationDate
                        - accountNumber
                        - cardNumberMasked
        '401':
          description: Требуется авторизация
          content:
            application/json:
              schema:
                type: object
                properties:
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-09-03T09:50:05Z'
                  status:
                    type: integer
                    example: 500
                  error:
                    type: string
                    example: INTERNAL SERVER ERROR
                  message:
                    type: string
                    example: Внутренняя ошибка сервера. Повторите попытку позже.
                  path:
                    type: string
                    example: /api/v1/card-products
                required:
                  - timestamp
                  - status
                  - error
                  - message
                  - path
              examples:
                unauthorized:
                  value:
                    uri: /api/v1/creditcard/cards
                    statusCode: 401
                    errorMessage: Требуется авторизация
                    timestamp: '2024-09-03T09:50:05Z'
                    error: UNAUTHORIZED
        '403':
          description: Недостаточно прав
          content:
            application/json:
              schema:
                $ref: '#/paths/~1creditcard~1cards/get/responses/401/content/application~1json/schema'
              examples:
                unauthorized:
                  value:
                    uri: /api/v1/creditcard/cards
                    statusCode: 403
                    errorMessage: Недостаточно прав
                    timestamp: '2024-09-03T09:50:05Z'
                    error: FORBIDDEN
  /credits/internal:
    get:
      tags:
        - credits
      summary: получить список всех кредитных продуктов клиента
      description: возвращает массив кредитных продуктов клиента
      parameters:
        - name: customerId
          in: query
          description: уникальный идентификатор клиента
          required: true
          schema:
            type: string
          example: d0e63be2-6bdd-4b74-97ab-19e76f5a78b2
      responses:
        '200':
          description: список уникальных идентификаторов кредитных счетов
          content:
            application/json:
              schema:
                type: object
                properties:
                  creditAccounts:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          example: d0e63be2-6bdd-4b74-97ab-19e76f5a78b2
                        number:
                          type: string
                          example: 40802810823200010000
                        cardId:
                          type: string
                          example: d0e63be2-6bdd-4b74-97ab-19e76f5a78b2
                      required:
                        - id
                        - number
                        - cardId
  /customer/api/v1/customers:
    post:
      tags:
        - Customers
      summary: Добавить нового клиента банка
      description: Создание новой записи клиента в системе банка
      operationId: addCustomer
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - customerInfo
                - passportInfo
                - addresses
                - contactsInfo
                - employmentDetails
              properties:
                customerInfo:
                  type: object
                  required:
                    - firstName
                    - lastName
                    - tin
                    - snils
                    - phoneNumber
                    - dateOfBirth
                  properties:
                    firstName:
                      type: string
                      example: Иван
                    lastName:
                      type: string
                      example: Иванович
                    middleName:
                      type: string
                      example: Иванов
                    tin:
                      type: string
                      pattern: '^\d{12}$'
                      example: '123456789123'
                      description: ИНН (12 цифр)
                    snils:
                      type: string
                      pattern: '^\d{11}$'
                      example: '12345678900'
                      description: СНИЛС (11 цифр)
                    dateOfBirth:
                      type: string
                      format: date
                      example: 12.05.1990
                    phoneNumber:
                      type: string
                      example: +7(918)1234567
                    email:
                      type: string
                      format: email
                      example: ivanov@mail.ru
                passportInfo:
                  type: object
                  required:
                    - passportNumber
                    - issueDate
                    - issuedBy
                    - departmentCode
                    - placeOfBirth
                  properties:
                    passportNumber:
                      type: string
                      example: '1234123456'
                      description: Номер паспорта (10 цифр)
                    issueDate:
                      type: string
                      format: date
                      example: 10.03.2020
                    issuedBy:
                      type: string
                      example: ГУ МВД РФ по Московской области
                    departmentCode:
                      type: string
                      example: 115-123
                      description: Код подразделения (6 цифр)
                    placeOfBirth:
                      type: string
                      example: г. Минск
                addressMatches:
                  type: boolean
                  description: Совпадают ли адреса регистрации и проживания
                addresses:
                  type: array
                  minItems: 1
                  maxItems: 1
                  items:
                    type: object
                    required:
                      - registrationAddress
                      - residentialAddress
                    properties:
                      registrationAddress:
                        $ref: '#/paths/~1customer~1api~1v1~1customers/post/requestBody/content/application~1json/schema/properties/addresses/items/properties/residentialAddress'
                      residentialAddress:
                        type: object
                        required:
                          - postalCode
                          - country
                          - city
                          - province
                          - street
                          - building
                        properties:
                          postalCode:
                            type: number
                            format: int32
                            example: 123456
                          country:
                            type: string
                            example: Россия
                          province:
                            type: string
                            example: Московская обл.
                          city:
                            type: string
                            example: г. Москва
                          street:
                            type: string
                            example: ул. Одинцова
                          building:
                            type: string
                            example: 12А
                          apartment:
                            type: string
                            example: '101'
                employmentDetails:
                  type: object
                  properties:
                    position:
                      type: string
                      example: бухгалтер
                    startDate:
                      type: string
                      format: date
                      example: 12.05.2000
                    salary:
                      type: number
                      example: 100000
                    employmentType:
                      type: string
                      example: постоянная
                    companyName:
                      type: string
                      example: Мишкин дом
                    companyPhone:
                      type: string
                      example: '79801234545'
                      description: Номер телефона в формате 7XXXXXXXXXX (11 цифр)
                    postalCode:
                      type: number
                      format: int32
                      example: 123456
                    country:
                      type: string
                      example: Россия
                    province:
                      type: string
                      example: Московская обл.
                    city:
                      type: string
                      example: г. Москва
                    street:
                      type: string
                      example: ул. Волхонка
                    building:
                      type: string
                      example: 19А
                    Office:
                      type: string
                      example: '225'
      responses:
        '201':
          description: Клиент успешно добавлен
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Клиент успешно добавлен
                  customerId:
                    type: string
                    format: uuid
                    example: 78088943-5c24-481c-8fbe-b3a203e9df11
                  passportId:
                    type: string
                    format: uuid
                    example: 79d37bf7-5c0c-4ba4-8fbb-88bb783fe0a7
                  registrationAddressId:
                    type: string
                    format: uuid
                    example: 3de7cb0d-25e8-446d-8ee1-d933bb34040e
                  residentialAddressId:
                    type: string
                    format: uuid
                    example: 35cf8eac-83d4-4a00-83b6-7feb9b7db245
                  employmentDetailsId:
                    type: string
                    format: uuid
                    example: afb6c6d6-f4b9-4f83-9a74-caac045f3f46
                  createDate:
                    type: string
                    format: date-time
                    example: '2025-02-17T17:30:00.000Z'
        '400':
          description: Некорректный запрос
          content:
            application/json:
              schema:
                type: object
                properties:
                  uri:
                    type: string
                    example: api/v1/user
                  type:
                    type: string
                    example: 400 BAD REQUEST
                  message:
                    type: string
                    example: Некорректный запрос
                  timeStamp:
                    type: string
                    format: date-time
                    example: '2025-02-17T17:30:00.000Z'
        '403':
          description: Недостаточно прав для совершения операции
          content:
            application/json:
              schema:
                $ref: '#/paths/~1customer~1api~1v1~1customers/post/responses/400/content/application~1json/schema'
        '409':
          description: Клиент с такими данными уже зарегистрирован
          content:
            application/json:
              schema:
                $ref: '#/paths/~1customer~1api~1v1~1customers/post/responses/400/content/application~1json/schema'
        '500':
          description: Внутренняя ошибка сервера
          content:
            application/json:
              schema:
                $ref: '#/paths/~1customer~1api~1v1~1customers/post/responses/400/content/application~1json/schema'
  '/customer/api/v1/customers/{id}':
    get:
      summary: Просмотр личной информации по клиенту
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Успешный ответ с информацией по клиенту
          content:
            application/json:
              schema:
                type: object
                required:
                  - customerStatus
                  - firstName
                  - lastName
                  - phoneNumber
                  - email
                  - birthDate
                  - country
                  - town
                  - street
                  - houseNumber
                  - apartmentNumber
                  - postcode
                  - factCountry
                  - factTown
                  - factStreet
                  - factHouseNumber
                  - factApartmentNumber
                  - factPostcode
                  - itn
                  - snPassport
                  - issueDate
                  - placeOfBirth
                  - departmentCode
                  - issuedBy
                  - snils
                properties:
                  customerStatus:
                    type: string
                    enum:
                      - active
                      - archive
                      - blocked
                  firstName:
                    type: string
                    example: Александр
                  lastName:
                    type: string
                    example: Иванов
                  patronymic:
                    type: string
                    example: Петрович
                  phoneNumber:
                    type: string
                    example: +7 (800) 555-35-35
                    pattern: '^\+7 \(\d{3}\) \d{3}-\d{2}-\d{2}$'
                  email:
                    type: string
                    example: ivanovalex@mail.ru
                  birthDate:
                    type: string
                    example: 17.03.1997
                    pattern: '^\d{2}\.\d{2}\.\d{4}$'
                  country:
                    type: string
                    example: Россия
                  region:
                    type: string
                    example: Краснодарский край
                  town:
                    type: string
                    example: Краснодар
                  street:
                    type: string
                    example: Морская
                  houseNumber:
                    type: string
                    example: 17
                  apartmentNumber:
                    type: number
                    example: 133
                  postcode:
                    type: number
                    example: 377337
                  factCountry:
                    type: string
                    example: Россия
                  factRegion:
                    type: string
                    example: Краснодарский край
                  factTown:
                    type: string
                    example: Краснодар
                  factStreet:
                    type: string
                    example: Баварская
                  factHouseNumber:
                    type: string
                    example: 20
                  factApartmentNumber:
                    type: number
                    example: 10
                  factPostcode:
                    type: number
                    example: 376890
                  itn:
                    type: string
                    example: 500100732259
                  snPassport:
                    type: string
                    example: 1145657654
                  issueDate:
                    type: string
                    example: 26.03.2023
                    pattern: '^\d{2}\.\d{2}\.\d{4}$'
                  placeOfBirth:
                    type: string
                    example: Краснодар
                  departmentCode:
                    type: string
                    example: 230-004
                    pattern: '^\d{3}-\d{3}$'
                  issuedBy:
                    type: string
                    example: ГУ МВД России по Краснодарской области
                  snils:
                    type: string
                    example: 123-456-789 01
                    pattern: '^\d{3}-\d{3}-\d{3} \d{2}$'
        '400':
          description: Ошибка загрузки данных
          content:
            application/json:
              schema:
                type: object
                required:
                  - timestamp
                  - status
                  - error
                  - path
                properties:
                  timestamp:
                    type: string
                    example: временная метка
                  status:
                    type: integer
                    example: код состояния HTTP
                  error:
                    type: string
                    example: пояснение к коду состояния
                  message:
                    type: string
                    example: сообщение об ошибке
                  path:
                    type: string
                    example: путь к EP
              example:
                timestamp: '2025-02-04T09:50:05Z'
                status: 400
                error: BAD REQUEST
                message: Что-то пошло не так. Повторите попытку позже
                path: '/api/v1/customers/{id}'
        '401':
          description: Ошибка авторизации
          content:
            application/json:
              schema:
                $ref: '#/paths/~1customer~1api~1v1~1customers~1%7Bid%7D/get/responses/400/content/application~1json/schema'
              example:
                timestamp: '2025-02-04T09:50:05Z'
                status: 401
                error: UNAUTHORIZED
                message: Требуется авторизация
                path: '/api/v1/customers/{id}'
        '403':
          description: Отсутствие прав доступа
          content:
            application/json:
              schema:
                $ref: '#/paths/~1customer~1api~1v1~1customers~1%7Bid%7D/get/responses/400/content/application~1json/schema'
              example:
                timestamp: '2025-02-04T09:50:05Z'
                status: 403
                error: FORBIDDEN
                message: У вас нет прав на выполнение этой операции
                path: '/api/v1/customers/{id}'
        '500':
          description: Ошибка загрузки данных
          content:
            application/json:
              schema:
                $ref: '#/paths/~1customer~1api~1v1~1customers~1%7Bid%7D/get/responses/400/content/application~1json/schema'
              example:
                timestamp: '2025-02-04T09:50:05Z'
                status: 500
                error: INTERNAL SERVER ERROR
                message: Ошибка загрузки данных
                path: '/api/v1/customers/{id}'
  '/customer/api/v1/employment-details/{customerId}':
    get:
      summary: Просмотр информации по трудоустройству клиента
      parameters:
        - name: customerId
          in: path
          required: true
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Успешный ответ с информацией по трудоустройству клиента (разные виды трудоустройства)
          content:
            application/json:
              schema:
                oneOf:
                  - type: object
                    required:
                      - typeOfEmployment
                      - placeOfEmployment
                      - position
                      - startDate
                      - monthlySalary
                      - companyPhone
                      - country
                      - town
                      - street
                      - houseNumber
                      - postcode
                    properties:
                      typeOfEmployment:
                        type: string
                        example: Постоянная занятость
                      placeOfEmployment:
                        type: string
                        example: Джипи Солюшнс
                      position:
                        type: string
                        example: Аудитор
                      startDate:
                        type: string
                        example: 18.09.2018
                        pattern: '^\d{2}\.\d{2}\.\d{4}$'
                      monthlySalary:
                        type: number
                        example: 180000
                      companyPhone:
                        type: string
                        example: +7 (809) 786-53-46
                        pattern: '^\+7 \(\d{3}\) \d{3}-\d{2}-\d{2}$'
                      country:
                        type: string
                        example: Россия
                      region:
                        type: string
                        example: Краснодарский край
                      town:
                        type: string
                        example: Краснодар
                      street:
                        type: string
                        example: Цветочная
                      houseNumber:
                        type: string
                        example: 5
                      officeNumber:
                        type: number
                        example: 456
                      postcode:
                        type: number
                        example: 230004
                  - type: object
                    required:
                      - typeOfEmployment
                      - placeOfEmployment
                      - position
                      - startDate
                      - monthlySalary
                      - termOfEmployment
                      - companyPhone
                      - companyAddress
                      - country
                      - town
                      - street
                      - houseNumber
                      - postcode
                    properties:
                      typeOfEmployment:
                        type: string
                        example: Временная занятость
                      placeOfEmployment:
                        type: string
                        example: Джипи Солюшнс
                      position:
                        type: string
                        example: Аудитор
                      startDate:
                        type: string
                        example: 17.02.2027
                        pattern: '^\d{2}\.\d{2}\.\d{4}$'
                      monthlySalary:
                        type: number
                        example: 180000
                      termOfEmployment:
                        type: string
                        example: 17.04.2027
                        pattern: '^\d{2}\.\d{2}\.\d{4}$'
                      companyPhone:
                        type: string
                        example: +7 (809) 786-53-46
                        pattern: '^\+7 \(\d{3}\) \d{3}-\d{2}-\d{2}$'
                      country:
                        type: string
                        example: Россия
                      region:
                        type: string
                        example: Краснодарский край
                      town:
                        type: string
                        example: Краснодар
                      street:
                        type: string
                        example: Цветочная
                      houseNumber:
                        type: string
                        example: 5
                      officeNumber:
                        type: number
                        example: 456
                      postcode:
                        type: number
                        example: 230004
                  - type: object
                    required:
                      - typeOfEmployment
                      - typeOfActivity
                      - registrationDate
                      - monthlySalary
                    properties:
                      typeOfEmployment:
                        type: string
                        example: Самозанятый
                      typeOfActivity:
                        type: string
                        example: Репетиторство
                      registrationDate:
                        type: string
                        example: 18.04.2013
                        pattern: '^\d{2}\.\d{2}\.\d{4}$'
                      monthlySalary:
                        type: number
                        example: 180000
                  - type: object
                    required:
                      - typeOfEmployment
                      - psrnsp
                      - businessName
                      - typeOfActivity
                      - registrationDate
                      - monthlySalary
                    properties:
                      typeOfEmployment:
                        type: string
                        example: Индивидуальный предприниматель
                      psrnsp:
                        type: string
                        example: 319774600123456
                      businessName:
                        type: string
                        example: ИП Иванов Александр Петрович
                      typeOfActivity:
                        type: string
                        example: Торговля
                      registrationDate:
                        type: string
                        example: 18.04.2013
                        pattern: '^\d{2}\.\d{2}\.\d{4}$'
                      monthlySalary:
                        type: number
                        example: 180000
                discriminator:
                  propertyName: typeOfEmployment
        '400':
          description: Ошибка загрузки данных
          content:
            application/json:
              schema:
                $ref: '#/paths/~1customer~1api~1v1~1customers~1%7Bid%7D/get/responses/400/content/application~1json/schema'
              example:
                timestamp: '2025-02-04T09:50:05Z'
                status: 400
                error: BAD REQUEST
                message: Что-то пошло не так. Повторите попытку позже
                path: '/api/v1/employment-details/{customerId}'
        '401':
          description: Ошибка авторизации
          content:
            application/json:
              schema:
                $ref: '#/paths/~1customer~1api~1v1~1customers~1%7Bid%7D/get/responses/400/content/application~1json/schema'
              example:
                timestamp: '2025-02-04T09:50:05Z'
                status: 401
                error: UNAUTHORIZED
                message: Требуется авторизация
                path: '/api/v1/employment-details/{customerId}'
        '403':
          description: Отсутствие прав доступа
          content:
            application/json:
              schema:
                $ref: '#/paths/~1customer~1api~1v1~1customers~1%7Bid%7D/get/responses/400/content/application~1json/schema'
              example:
                timestamp: '2025-02-04T09:50:05Z'
                status: 403
                error: FORBIDDEN
                message: У вас нет прав на выполнение этой операции
                path: '/api/v1/employment-details/{customerId}'
        '500':
          description: Ошибка загрузки данных
          content:
            application/json:
              schema:
                $ref: '#/paths/~1customer~1api~1v1~1customers~1%7Bid%7D/get/responses/400/content/application~1json/schema'
              example:
                timestamp: '2025-02-04T09:50:05Z'
                status: 500
                error: INTERNAL SERVER ERROR
                message: Ошибка загрузки данных
                path: '/api/v1/employment-details/{customerId}'
  /api/v1/customers:
    post:
      summary: Поиск клиента по паспортным данным
      tags:
        - Customers
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                snPassport:
                  type: string
                  description: Серия и номер паспорта клиента
                  example: '1234561111'
              required:
                - snPassport
      responses:
        '200':
          description: Успешный ответ с найденным клиентом
          content:
            application/json:
              schema:
                type: object
                required:
                  - customersId
                  - customerStatus
                  - lastName
                  - firstName
                  - patronymic
                  - snPassport
                properties:
                  customersId:
                    type: string
                    example: 4f1c2d52-8a6e-4b6a-9b8a-2a4f7e3c9d12
                  customerStatus:
                    type: string
                    enum:
                      - active
                      - archive
                      - blocked
                  lastName:
                    type: string
                    example: Иванов
                  firstName:
                    type: string
                    example: Иван
                  patronymic:
                    type: string
                    example: Иванович
                  snPassport:
                    type: string
                    example: 1234561111
        '400':
          description: Ошибка загрузки данных
          content:
            application/json:
              schema:
                type: object
                required:
                  - timestamp
                  - status
                  - error
                  - path
                properties:
                  timestamp:
                    type: string
                    example: временная метка
                  status:
                    type: integer
                    example: код состояния HTTP
                  error:
                    type: string
                    example: пояснение к коду состояния
                  path:
                    type: string
                    example: путь к EP
              example:
                timestamp: '2025-02-04T09:50:05Z'
                status: 400
                error: BAD REQUEST
                path: /api/v1/customers
        '401':
          description: Ошибка авторизации
          content:
            application/json:
              schema:
                $ref: '#/paths/~1api~1v1~1customers/post/responses/400/content/application~1json/schema'
              example:
                timestamp: '2025-02-04T09:50:05Z'
                status: 401
                error: UNAUTHORIZED
                path: /api/v1/customers
        '403':
          description: Отсутствие прав доступа
          content:
            application/json:
              schema:
                $ref: '#/paths/~1api~1v1~1customers/post/responses/400/content/application~1json/schema'
              example:
                timestamp: '2025-02-04T09:50:05Z'
                status: 403
                error: FORBIDDEN
                path: /api/v1/customers
        '404':
          description: Клиент не найден
          content:
            application/json:
              schema:
                $ref: '#/paths/~1api~1v1~1customers/post/responses/400/content/application~1json/schema'
              example:
                timestamp: '2025-02-04T09:50:05Z'
                status: 404
                error: NOT FOUND
                path: /api/v1/customers
        '500':
          description: Ошибка загрузки данных
          content:
            application/json:
              schema:
                $ref: '#/paths/~1api~1v1~1customers/post/responses/400/content/application~1json/schema'
              example:
                timestamp: '2025-02-04T09:50:05Z'
                status: 500
                error: INTERNAL SERVER ERROR
                path: /api/v1/customers
  /card-products:
    get:
      security: []
      tags:
        - card
      summary: получить список названий активных дебетовых карточных продуктов
      description: Возвращает массив названий активных дебетовых карточных продуктов.
      parameters:
        - name: cardType
          in: query
          description: фильтрация по типу дебетового карточного продукта
          required: false
          schema:
            type: string
          example: DEBIT
        - name: isActive
          in: query
          description: фильтрация по статусу дебетового карточного продукта
          required: false
          schema:
            type: boolean
          example: true
      responses:
        '200':
          description: список карточных продуктов
          content:
            application/json:
              schema:
                type: object
                properties:
                  cardProducts:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          example: d0e63be2-6bdd-4b74-97ab-19e76f5a78b2
                        tariffId:
                          type: string
                          example: d0e63be2-6bdd-4b74-97ab-19e76f5a78b2
                        name:
                          type: string
                          example: ЛибертиКарта
                        description:
                          type: string
                          example: 'универсальная карта, которая подойдет всем'
                        cardType:
                          type: string
                          example: DEBIT
                        currency:
                          type: string
                          example: RUB
                        paymentSystem:
                          type: string
                          example: MIR
                        expiration:
                          type: integer
                          example: 36
                        createdAt:
                          type: string
                          example: '2025-10-19 10:23:54+02'
                        createdBy:
                          type: string
                          example: b5f355b3-c3fe-42c9-a759-b5dce7c2ea7c
                        deletedAt:
                          type: string
                          example: '2025-10-19 10:23:54+02'
                          nullable: true
                        deletedBy:
                          type: string
                          example: b5f355b3-c3fe-42c9-a759-b5dce7c2ea7c
                          nullable: true
                        isActive:
                          type: boolean
                          example: true
                        cardImageLink:
                          type: string
                          example: 'https://i.ibb.co/b0WWP1t/image.png'
                        slogan:
                          type: string
                          example: Максимум выгоды за покупки в любимых супермаркетах
                        creditLimit:
                          type: number
                          example: 48000
                          nullable: true
                      required:
                        - id
                        - name
                        - description
                        - cardType
                        - currency
                        - paymentSystem
                        - expiration
                        - createdAt
                        - createdBy
                        - deletedAt
                        - deletedBy
                        - isActive
                        - cardImageLink
                        - slogan
                        - creditLimit
        '400':
          description: невалидный запрос
          content:
            application/json:
              schema:
                $ref: '#/paths/~1accounts/get/responses/400/content/application~1json/schema'
              examples:
                unauthorized:
                  value:
                    timestamp: '2024-09-03T09:50:05Z'
                    status: 400
                    error: BAD REQUEST
                    message: невалидный запрос
                    path: /api/v1/card-products
        '500':
          description: внутренняя ошибка сервера
          content:
            application/json:
              schema:
                $ref: '#/paths/~1accounts/get/responses/400/content/application~1json/schema'
              examples:
                internalServerError:
                  value:
                    timestamp: '2024-09-03T09:50:05Z'
                    status: 500
                    error: INTERNAL SERVER ERROR
                    message: Внутренняя ошибка сервера. Повторите попытку позже.
                    path: /api/v1/card-products
  /card-services:
    get:
      tags:
        - card
      summary: получить список дополнительных услуг
      description: Возвращает массив с дополнительными услугами.
      parameters:
        - name: isActive
          in: query
          description: фильтрация по статусу дополнительной услуги
          required: false
          schema:
            type: boolean
          example: true
      responses:
        '200':
          description: список дополнительных услуг
          content:
            application/json:
              schema:
                type: object
                properties:
                  services:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          example: d0e63be2-6bdd-4b74-97ab-19e76f5a78b2
                        type:
                          type: string
                          example: SMS
                        name:
                          type: string
                          example: СМС-информирование
                        isActive:
                          type: boolean
                          example: true
                      required:
                        - id
                        - type
                        - name
                        - isActive
        '400':
          description: невалидный запрос
          content:
            application/json:
              schema:
                $ref: '#/paths/~1accounts/get/responses/400/content/application~1json/schema'
              examples:
                unauthorized:
                  value:
                    timestamp: '2024-09-03T09:50:05Z'
                    status: 400
                    error: BAD REQUEST
                    message: невалидный запрос
                    path: /api/v1/card-services
        '401':
          description: Требуется авторизация
          content:
            application/json:
              schema:
                $ref: '#/paths/~1accounts/get/responses/400/content/application~1json/schema'
              examples:
                unauthorized:
                  value:
                    timestamp: '2024-09-03T09:50:05Z'
                    status: 401
                    error: UNAUTHORIZED
                    message: Требуется авторизация
                    path: /api/v1/card-services
        '403':
          description: Доступ запрещен
          content:
            application/json:
              schema:
                $ref: '#/paths/~1accounts/get/responses/400/content/application~1json/schema'
              examples:
                forbidden:
                  value:
                    timestamp: '2024-09-03T09:50:05Z'
                    status: 403
                    error: FORBIDDEN
                    message: У вас нет прав на выполнение этой операции
                    path: /api/v1/card-services
        '500':
          description: внутренняя ошибка сервера
          content:
            application/json:
              schema:
                $ref: '#/paths/~1accounts/get/responses/400/content/application~1json/schema'
              examples:
                internalServerError:
                  value:
                    timestamp: '2024-09-03T09:50:05Z'
                    status: 500
                    error: INTERNAL SERVER ERROR
                    message: Внутренняя ошибка сервера. Повторите попытку позже.
                    path: /api/v1/card-services
  /accounts:
    get:
      tags:
        - account
      summary: получить список текущих счетов
      description: Возвращает массив с текущими счетами.
      parameters:
        - name: customerId
          in: query
          required: false
          description: фильтрация по идентификатору клиента
          schema:
            type: string
          example: d0e63be2-6bdd-4b74-97ab-19e76f5a78b2
        - name: isActive
          in: query
          required: false
          description: фильтрация по статусу счета
          schema:
            type: boolean
          example: true
      responses:
        '200':
          description: список текущих счетов
          content:
            application/json:
              schema:
                type: object
                properties:
                  currentAccounts:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          example: d0e63be2-6bdd-4b74-97ab-19e76f5a78b2
                        number:
                          type: string
                          example: '40802810800000003298'
                        customerId:
                          type: string
                          example: d0e63be2-6bdd-4b74-97ab-19e76f5a78b2
                        accountTypeId:
                          type: string
                          example: d0e63be2-6bdd-4b74-97ab-19e76f5a78b2
                        isActive:
                          type: boolean
                          example: true
                        balanceId:
                          type: string
                          example: d0e63be2-6bdd-4b74-97ab-19e76f5a78b2
                        openDate:
                          type: string
                          example: '2021-12-28'
                        closeDate:
                          type: string
                          nullable: true
                          example: null
                        autoPayments:
                          type: boolean
                          example: true
                        internetBanking:
                          type: boolean
                          example: true
                      required:
                        - id
                        - number
                        - customerId
                        - accountTypeId
                        - isActive
                        - balanceId
                        - openDate
                        - closeDate
                        - autoPayments
                        - internetBanking
        '400':
          description: невалидный запрос
          content:
            application/json:
              schema:
                type: object
                properties:
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-09-03T09:50:05Z'
                  status:
                    type: integer
                    example: 500
                  error:
                    type: string
                    example: INTERNAL SERVER ERROR
                  message:
                    type: string
                    example: Внутренняя ошибка сервера. Повторите попытку позже.
                  path:
                    type: string
                    example: /api/v1/card-products
                required:
                  - timestamp
                  - status
                  - error
                  - message
                  - path
              examples:
                unauthorized:
                  value:
                    timestamp: '2024-09-03T09:50:05Z'
                    status: 400
                    error: BAD REQUEST
                    message: невалидный запрос
                    path: /api/v1/accounts
        '401':
          description: Требуется авторизация
          content:
            application/json:
              schema:
                $ref: '#/paths/~1accounts/get/responses/400/content/application~1json/schema'
              examples:
                unauthorized:
                  value:
                    timestamp: '2024-09-03T09:50:05Z'
                    status: 401
                    error: UNAUTHORIZED
                    message: Требуется авторизация
                    path: /api/v1/accounts
        '403':
          description: Доступ запрещен
          content:
            application/json:
              schema:
                $ref: '#/paths/~1accounts/get/responses/400/content/application~1json/schema'
              examples:
                forbidden:
                  value:
                    timestamp: '2024-09-03T09:50:05Z'
                    status: 403
                    error: FORBIDDEN
                    message: У вас нет прав на выполнение этой операции
                    path: /api/v1/accounts
        '500':
          description: внутренняя ошибка сервера
          content:
            application/json:
              schema:
                $ref: '#/paths/~1accounts/get/responses/400/content/application~1json/schema'
              examples:
                internalServerError:
                  value:
                    timestamp: '2024-09-03T09:50:05Z'
                    status: 500
                    error: INTERNAL SERVER ERROR
                    message: Внутренняя ошибка сервера. Повторите попытку позже.
                    path: /api/v1/accounts
  '/customers/{id}/details(fromAddDebitCard)':
    get:
      tags:
        - customer
      summary: получить детальную информацию по клиенту
      description: Возвращает информацию по клиенту для заполнения заявления на оформление продукта.
      parameters:
        - name: id
          in: path
          description: выбор клиента по uuid
          required: true
          schema:
            type: string
          example: d0e63be2-6bdd-4b74-97ab-19e76f5a78b2
      responses:
        '200':
          description: информация по клиенту
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    example: d0e63be2-6bdd-4b74-97ab-19e76f5a78b2
                  firstName:
                    type: string
                    example: Иван
                  lastName:
                    type: string
                    example: Иванов
                  patronymic:
                    type: string
                    example: Иванович
                  email:
                    type: string
                    example: ivanovivan@gmail.com
                  birthDate:
                    type: string
                    example: 15.05.1990
                  phoneNumber:
                    type: string
                    example: '78005553535'
                  snPassport:
                    type: string
                    example: '4215362958'
                  regAddress:
                    type: integer
                    example: 'г. Москва, ул. Ленина, д.10, кв.5'
                  factAddress:
                    type: integer
                    example: 'г. Москва, ул. Ленина, д.10, кв.5'
                  issueDate:
                    type: string
                    example: 20.07.2020
                  issuedBy:
                    type: string
                    example: УВД г. Москва
                  itn:
                    type: string
                    example: '123456789012'
                  snils:
                    type: string
                    example: 123-456-789 12
                  placeOfEmployment:
                    type: string
                    example: Ростелеком
                  position:
                    type: string
                    example: Менеджер
                required:
                  - id
                  - firstName
                  - lastName
                  - email
                  - birthDate
                  - phoneNumber
                  - snPassport
                  - regAddress
                  - factAddress
                  - issueDate
                  - issuedBy
                  - itn
                  - snils
                  - placeOfEmployment
                  - position
        '400':
          description: невалидный запрос
          content:
            application/json:
              schema:
                type: object
                properties:
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-09-03T09:50:05Z'
                  status:
                    type: integer
                    example: 500
                  error:
                    type: string
                    example: INTERNAL SERVER ERROR
                  message:
                    type: string
                    example: Внутренняя ошибка сервера. Повторите попытку позже.
                  path:
                    type: string
                    example: '/api/v1/customers/{id}/details'
                required:
                  - timestamp
                  - status
                  - error
                  - message
                  - path
              examples:
                unauthorized:
                  value:
                    timestamp: '2024-09-03T09:50:05Z'
                    status: 400
                    error: BAD REQUEST
                    message: невалидный запрос
                    path: /api/v1/customers/d0e63be2-6bdd-4b74-97ab-19e76f5a78b2/details
        '401':
          description: Требуется авторизация
          content:
            application/json:
              schema:
                $ref: '#/paths/~1customers~1%7Bid%7D~1details(fromAddDebitCard)/get/responses/400/content/application~1json/schema'
              examples:
                unauthorized:
                  value:
                    timestamp: '2024-09-03T09:50:05Z'
                    status: 401
                    error: UNAUTHORIZED
                    message: Требуется авторизация
                    path: /api/v1/customers/d0e63be2-6bdd-4b74-97ab-19e76f5a78b2/details
        '403':
          description: Доступ запрещен
          content:
            application/json:
              schema:
                $ref: '#/paths/~1customers~1%7Bid%7D~1details(fromAddDebitCard)/get/responses/400/content/application~1json/schema'
              examples:
                forbidden:
                  value:
                    timestamp: '2024-09-03T09:50:05Z'
                    status: 403
                    error: FORBIDDEN
                    message: У вас нет прав на выполнение этой операции
                    path: /api/v1/customers/d0e63be2-6bdd-4b74-97ab-19e76f5a78b2/details
        '500':
          description: внутренняя ошибка сервера
          content:
            application/json:
              schema:
                $ref: '#/paths/~1customers~1%7Bid%7D~1details(fromAddDebitCard)/get/responses/400/content/application~1json/schema'
              examples:
                internalServerError:
                  value:
                    timestamp: '2024-09-03T09:50:05Z'
                    status: 500
                    error: INTERNAL SERVER ERROR
                    message: Внутренняя ошибка сервера. Повторите попытку позже.
                    path: /api/v1/customers/d0e63be2-6bdd-4b74-97ab-19e76f5a78b2/details
  '/customers/{id}':
    get:
      tags:
        - customer
      summary: получить информацию по клиенту
      description: Возвращает информацию по клиенту.
      parameters:
        - name: id
          in: path
          description: выбор клиента по uuid
          required: true
          schema:
            type: string
          example: d0e63be2-6bdd-4b74-97ab-19e76f5a78b2
      responses:
        '200':
          description: информация по клиенту
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    example: d0e63be2-6bdd-4b74-97ab-19e76f5a78b2
                  firstName:
                    type: string
                    example: Александр
                  lastName:
                    type: string
                    example: Иванов
                  patronymic:
                    type: string
                    nullable: true
                    example: Петрович
                  email:
                    type: string
                    example: ivanovivan@gmail.com
                  birthDate:
                    type: string
                    example: '1989-05-13'
                  phoneNumber:
                    type: string
                    example: '78005553535'
                  passportId:
                    type: integer
                    example: 4215362958
                  addressRegId:
                    type: integer
                    example: 321
                  addressFactId:
                    type: integer
                    example: 321
                  customerStatus:
                    type: string
                    example: active
                  inn:
                    type: string
                    example: '123456789123'
                  snils:
                    type: string
                    example: 123-456-789 01
                required:
                  - id
                  - firstName
                  - lastName
                  - patronymic
                  - email
                  - birthDate
                  - phoneNumber
                  - passportId
                  - addressRegId
                  - addressFactId
                  - customerStatus
                  - inn
                  - snils
        '400':
          description: невалидный запрос
          content:
            application/json:
              schema:
                $ref: '#/paths/~1debit-card/post/responses/400/content/application~1json/schema'
              examples:
                unauthorized:
                  value:
                    timestamp: '2024-09-03T09:50:05Z'
                    status: 400
                    error: BAD REQUEST
                    message: невалидный запрос
                    path: /api/v1/customers/d0e63be2-6bdd-4b74-97ab-19e76f5a78b2
        '401':
          description: Требуется авторизация
          content:
            application/json:
              schema:
                $ref: '#/paths/~1debit-card/post/responses/400/content/application~1json/schema'
              examples:
                unauthorized:
                  value:
                    timestamp: '2024-09-03T09:50:05Z'
                    status: 401
                    error: UNAUTHORIZED
                    message: Требуется авторизация
                    path: /api/v1/customers/d0e63be2-6bdd-4b74-97ab-19e76f5a78b2
        '403':
          description: Доступ запрещен
          content:
            application/json:
              schema:
                $ref: '#/paths/~1debit-card/post/responses/400/content/application~1json/schema'
              examples:
                forbidden:
                  value:
                    timestamp: '2024-09-03T09:50:05Z'
                    status: 403
                    error: FORBIDDEN
                    message: У вас нет прав на выполнение этой операции
                    path: /api/v1/customers/d0e63be2-6bdd-4b74-97ab-19e76f5a78b2
        '500':
          description: внутренняя ошибка сервера
          content:
            application/json:
              schema:
                $ref: '#/paths/~1debit-card/post/responses/400/content/application~1json/schema'
              examples:
                internalServerError:
                  value:
                    timestamp: '2024-09-03T09:50:05Z'
                    status: 500
                    error: INTERNAL SERVER ERROR
                    message: Внутренняя ошибка сервера. Повторите попытку позже.
                    path: /api/v1/customers/d0e63be2-6bdd-4b74-97ab-19e76f5a78b2
  /documents/api/v1/document:
    post:
      tags:
        - document
      summary: Загрузить документ
      description: Загружает документ в систему с привязкой к аккаунту и карте.
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
                  description: PDF-документ для загрузки
                metadata:
                  type: object
                  description: json содержащий accountId и cardId
                  properties:
                    accountId:
                      type: string
                      format: uuid
                      example: d0e63be2-6bdd-4b74-97ab-19e76f5a78b2
                    cardId:
                      type: string
                      format: uuid
                      example: d0e63be2-6bdd-4b74-97ab-19e76f5a78b2
      responses:
        '200':
          description: Документ успешно загружен
        '400':
          description: невалидный запрос
          content:
            application/json:
              schema:
                $ref: '#/paths/~1debit-card/post/responses/400/content/application~1json/schema'
              examples:
                unauthorized:
                  value:
                    timestamp: '2024-09-03T09:50:05Z'
                    status: 400
                    error: BAD REQUEST
                    message: Отсутствует файл или метаданные
                    path: '/api/v1/document:'
        '401':
          description: Требуется авторизация
          content:
            application/json:
              schema:
                $ref: '#/paths/~1debit-card/post/responses/400/content/application~1json/schema'
              examples:
                unauthorized:
                  value:
                    timestamp: '2024-09-03T09:50:05Z'
                    status: 401
                    error: UNAUTHORIZED
                    message: Требуется авторизация
                    path: /api/v1/document
        '403':
          description: Доступ запрещен
          content:
            application/json:
              schema:
                $ref: '#/paths/~1debit-card/post/responses/400/content/application~1json/schema'
              examples:
                forbidden:
                  value:
                    timestamp: '2024-09-03T09:50:05Z'
                    status: 403
                    error: FORBIDDEN
                    message: У вас нет прав на выполнение этой операции
                    path: /api/v1/document
        '500':
          description: внутренняя ошибка сервера
          content:
            application/json:
              schema:
                $ref: '#/paths/~1debit-card/post/responses/400/content/application~1json/schema'
              examples:
                internalServerError:
                  value:
                    timestamp: '2024-09-03T09:50:05Z'
                    status: 500
                    error: INTERNAL SERVER ERROR
                    message: Внутренняя ошибка сервера. Повторите попытку позже.
                    path: /api/v1/document
  /debit-card:
    post:
      tags:
        - card
      summary: оформить дебетовую карту клиенту
      description: Создает новую дебетовую карту для клиента.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                customerId:
                  type: string
                  description: Идентификатор клиента
                  example: d0e63be2-6bdd-4b74-97ab-19e76f5a78b2
                cardProductId:
                  type: string
                  description: Идентификатор дебетового карточного продукта
                  example: d0e63be2-6bdd-4b74-97ab-19e76f5a78b2
                currentAccountId:
                  type: string
                  description: Идентификатор текущего счета клиента
                  example: d0e63be2-6bdd-4b74-97ab-19e76f5a78b2
                serviceIds:
                  type: array
                  default: []
                  items:
                    type: string
                  description: |
                    Подключаемые дополнительные услуги. Если пустой массив - то услуги не подключаются.
                  example:
                    - d0e63be2-6bdd-4b74-97ab-19e76f5a78b2
              required:
                - customerId
                - cardProductId
                - currentAccountId
                - serviceIds
      responses:
        '201':
          description: Успешное создание дебетовой карты клиента
          content:
            application/json:
              schema:
                type: object
                properties:
                  credentialsId:
                    type: string
                    example: d0e63be2-6bdd-4b74-97ab-19e76f5a78b2
                  cardId:
                    type: string
                    example: d0e63be2-6bdd-4b74-97ab-19e76f5a78b2
                  cardNumberMasked:
                    type: string
                    example: 220100******1234
                  cardNumberEncrypted:
                    type: string
                    example: 8f2a6c4e8d3d52a4999a0db65a6fc4a7c72e0e3bcbfd32f7a20366cd4a73fd95
                  cardHolder:
                    type: string
                    example: ALEKSANDR IVANOV
                  expirationDate:
                    type: string
                    example: 09/26
                  customerId:
                    type: string
                    example: d0e63be2-6bdd-4b74-97ab-19e76f5a78b2
                  customerFirstName:
                    type: string
                    example: Александр
                  customerLastName:
                    type: string
                    example: Иванов
                  customerPatronymic:
                    type: string
                    nullable: true
                    example: Петрович
                  accountId:
                    type: string
                    example: d0e63be2-6bdd-4b74-97ab-19e76f5a78b2
                required:
                  - credentialsId
                  - cardId
                  - cardNumberMasked
                  - cardNumberEncrypted
                  - cardHolder
                  - expirationDate
                  - customerId
                  - customerFirstName
                  - customerLastName
                  - accountId
        '400':
          description: невалидный запрос
          content:
            application/json:
              schema:
                type: object
                properties:
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-09-03T09:50:05Z'
                  status:
                    type: integer
                    example: 500
                  error:
                    type: string
                    example: INTERNAL SERVER ERROR
                  message:
                    type: string
                    example: Внутренняя ошибка сервера. Повторите попытку позже.
                  path:
                    type: string
                    example: /api/v1/card-products
                required:
                  - timestamp
                  - status
                  - error
                  - message
                  - path
              examples:
                unauthorized:
                  value:
                    timestamp: '2024-09-03T09:50:05Z'
                    status: 400
                    error: BAD REQUEST
                    message: невалидный запрос
                    path: /api/v1/debit-card
        '401':
          description: Требуется авторизация
          content:
            application/json:
              schema:
                $ref: '#/paths/~1debit-card/post/responses/400/content/application~1json/schema'
              examples:
                unauthorized:
                  value:
                    timestamp: '2024-09-03T09:50:05Z'
                    status: 401
                    error: UNAUTHORIZED
                    message: Требуется авторизация
                    path: /api/v1/debit-card
        '403':
          description: Доступ запрещен
          content:
            application/json:
              schema:
                $ref: '#/paths/~1debit-card/post/responses/400/content/application~1json/schema'
              examples:
                forbidden:
                  value:
                    timestamp: '2024-09-03T09:50:05Z'
                    status: 403
                    error: FORBIDDEN
                    message: У вас нет прав на выполнение этой операции
                    path: /api/v1/debit-card
        '500':
          description: внутренняя ошибка сервера
          content:
            application/json:
              schema:
                $ref: '#/paths/~1debit-card/post/responses/400/content/application~1json/schema'
              examples:
                internalServerError:
                  value:
                    timestamp: '2024-09-03T09:50:05Z'
                    status: 500
                    error: INTERNAL SERVER ERROR
                    message: Внутренняя ошибка сервера. Повторите попытку позже.
                    path: /api/v1/debit-card
  /account-card:
    post:
      tags:
        - account
      summary: привязать карту к текущему счету
      description: связывает карту с текущим счетом.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                accountId:
                  type: string
                  description: Идентификатор счета
                  example: d0e63be2-6bdd-4b74-97ab-19e76f5a78b2
                cardId:
                  type: string
                  description: Идентификатор карты
                  example: d0e63be2-6bdd-4b74-97ab-19e76f5a78b2
              required:
                - accountId
                - cardId
      responses:
        '201':
          description: Успешная привязка карты к текущему счету
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    example: d0e63be2-6bdd-4b74-97ab-19e76f5a78b2
                  accountId:
                    type: string
                    example: d0e63be2-6bdd-4b74-97ab-19e76f5a78b2
                  cardId:
                    type: string
                    example: d0e63be2-6bdd-4b74-97ab-19e76f5a78b2
                required:
                  - id
                  - accountId
                  - cardId
        '400':
          description: невалидный запрос
          content:
            application/json:
              schema:
                $ref: '#/paths/~1debit-card/post/responses/400/content/application~1json/schema'
              examples:
                unauthorized:
                  value:
                    timestamp: '2024-09-03T09:50:05Z'
                    status: 400
                    error: BAD REQUEST
                    message: невалидный запрос
                    path: /api/v1/account-card
        '401':
          description: Требуется авторизация
          content:
            application/json:
              schema:
                $ref: '#/paths/~1debit-card/post/responses/400/content/application~1json/schema'
              examples:
                unauthorized:
                  value:
                    timestamp: '2024-09-03T09:50:05Z'
                    status: 401
                    error: UNAUTHORIZED
                    message: Требуется авторизация
                    path: /api/v1/account-card
        '403':
          description: Доступ запрещен
          content:
            application/json:
              schema:
                $ref: '#/paths/~1debit-card/post/responses/400/content/application~1json/schema'
              examples:
                forbidden:
                  value:
                    timestamp: '2024-09-03T09:50:05Z'
                    status: 403
                    error: FORBIDDEN
                    message: У вас нет прав на выполнение этой операции
                    path: /api/v1/account-card
        '500':
          description: внутренняя ошибка сервера
          content:
            application/json:
              schema:
                $ref: '#/paths/~1debit-card/post/responses/400/content/application~1json/schema'
              examples:
                internalServerError:
                  value:
                    timestamp: '2024-09-03T09:50:05Z'
                    status: 500
                    error: INTERNAL SERVER ERROR
                    message: Внутренняя ошибка сервера. Повторите попытку позже.
                    path: /api/v1/account-card
  '/api/v1/cards/{cardId}':
    get:
      tags:
        - card
      summary: получить данные по конкретной дебетовой карте клиента
      description: возвращает данные дебетовой карты клиента
      parameters:
        - name: cardId
          in: path
          description: 'уникальный идентификатор карты, по которому делается выборка'
          required: true
          schema:
            type: string
          example: b5f355b3-c3fe-42c9-a759-b5dce7c2ea7c
      responses:
        '200':
          description: данные дебетовой карты
          content:
            application/json:
              schema:
                type: object
                properties:
                  cardId:
                    type: string
                    example: b5f355b3-c3fe-42c9-a759-b5dce7c2ea7c
                  cardHolder:
                    type: string
                    example: Aleksandr Ivanov
                  cardnumber:
                    type: string
                    example: 220100******1234
                  expirationDate:
                    type: string
                    example: '2027-07-26'
                  accountNumber:
                    type: string
                    example: '40802810823200003298'
                  status:
                    type: string
                    example: ACTIVE
                  creationDate:
                    type: string
                    example: '2024-07-26'
                  paymentSystem:
                    type: string
                    example: Мир
                  isActive:
                    type: boolean
                    example: 'true'
                  balance:
                    type: string
                    example: '150000.00'
                  autoPayments:
                    type: boolean
                    example: 'true'
                  currency:
                    type: string
                    example: RUB
                required:
                  - cardId
                  - cardHolder
                  - cardnumber
                  - expirationDate
                  - accountNumber
                  - status
                  - creationDate
                  - paymentSystem
                  - isActive
                  - balance
                  - autoPayments
                  - currency
        '500':
          description: INTERNAL SERVER ERROR
          content:
            application/json:
              schema:
                type: object
                required:
                  - error
                  - message
                properties:
                  error:
                    type: string
                    description: Пояснение к коду состояния
                  message:
                    type: string
                    description: Сообщение об ошибке
              examples:
                internalServerError:
                  value:
                    uri: /api/v1/accounts
                    statusCode: 500
                    error: INTERNAL SERVER ERROR
                    message: INTERNAL SERVER ERROR
  '/api/v1/accounts/{accountId}':
    get:
      tags:
        - account
      summary: 'получить данные счета, к которому привязана дебетовая карта клиента'
      description: возвращает данные счета
      parameters:
        - name: accountId
          in: path
          description: 'уникальный идентификатор счета, по которому делается выборка'
          required: true
          schema:
            type: string
          example: b5f355b3-c3fe-42c9-a759-b5dce7c2ea7c
      responses:
        '200':
          description: данные счета по дебетовой карте
          content:
            application/json:
              schema:
                type: object
                properties:
                  accounts:
                    type: array
                    items:
                      type: object
                      properties:
                        accountId:
                          type: string
                          example: b5f355b3-c3fe-42c9-a759-b5dce7c2ea7c
                        accountNumber:
                          type: string
                          example: '40802810823200003298'
                        balance:
                          type: string
                          example: '150000.00'
                        autoPayments:
                          type: boolean
                          example: 'true'
                        currency:
                          type: string
                          example: RUB
                      required:
                        - accountId
                        - accountNumber
                        - balance
                        - autoPayments
                        - currency
        '500':
          description: INTERNAL SERVER ERROR
          content:
            application/json:
              schema:
                $ref: '#/paths/~1api~1v1~1cards~1%7BcardId%7D/get/responses/500/content/application~1json/schema'
              examples:
                internalServerError:
                  value:
                    uri: /api/v1/accounts
                    statusCode: 500
                    error: INTERNAL SERVER ERROR
                    message: INTERNAL SERVER ERROR
  /card/api/v1/card-orders:
    get:
      summary: Получить список дебетовых карт клиента
      operationId: getDebitCardsByCustomerId
      security:
        - bearerAuth: []
      parameters:
        - name: customerId
          in: query
          required: true
          schema:
            type: string
            example: 710c624e-4332-45ee-8351-5d2771336b36
          description: Идентификатор клиента
      responses:
        '200':
          description: Успешный ответ. Возвращён список дебетовых карт.
          content:
            application/json:
              schema:
                type: object
                properties:
                  debitCardProducts:
                    type: array
                    items:
                      type: object
                      properties:
                        card_credentials:
                          type: array
                          items:
                            type: object
                            properties:
                              card_number_masked:
                                type: string
                                example: 220100******1234
                                description: Маскированный номер карты
                              expiration_date:
                                type: string
                                format: date
                                example: 09/22
                                description: Срок действия карты
                        card_products:
                          type: array
                          items:
                            type: object
                            properties:
                              name:
                                type: string
                                example: ЛибертиКарта
                                description: Название карты
                        card_orders:
                          type: array
                          items:
                            type: object
                            properties:
                              status:
                                type: string
                                example: PROCESSING
                                description: Статус заказа на карту
                      required:
                        - card_credentials
                        - card_products
                        - card_orders
        '401':
          description: Ошибка авторизации
          content:
            application/json:
              schema:
                type: object
                properties:
                  timestamp:
                    type: string
                    format: date-time
                    example: '2025-04-06T12:34:56Z'
                  status:
                    type: integer
                    example: 404
                  error:
                    type: string
                    example: NOT_FOUND
                  message:
                    type: string
                    example: Страница не найдена.
                  path:
                    type: string
                    example: /card/api/v1/card-orders
              example:
                error: UNAUTHORIZED
                message: Требуется авторизация
        '403':
          description: Доступ запрещен
          content:
            application/json:
              schema:
                $ref: '#/paths/~1card~1api~1v1~1card-orders/get/responses/401/content/application~1json/schema'
              example:
                error: FORBIDDEN
                message: У вас нет прав на выполнение этой операции
        '404':
          description: Счет или данные по клиенту не найдены
          content:
            application/json:
              schema:
                $ref: '#/paths/~1card~1api~1v1~1card-orders/get/responses/401/content/application~1json/schema'
              example:
                error: NOT FOUND
                message: Страница не найдена.
        '500':
          description: Внутренняя ошибка сервера
          content:
            application/json:
              schema:
                $ref: '#/paths/~1card~1api~1v1~1card-orders/get/responses/401/content/application~1json/schema'
              example:
                error: INTERNAL SERVER ERROR
                message: Сервис временно недоступен. Повторите попытку позже.
  /account/api/v1/accounts:
    get:
      summary: Получить список счетов клиента
      operationId: getAccountsByCustomerId
      security:
        - bearerAuth: []
      parameters:
        - name: customerId
          in: query
          required: true
          schema:
            type: string
            example: d0e63be2-6bdd-4b74-97ab-19e76f5a78b2
          description: Идентификатор клиента
      responses:
        '200':
          description: Успешный ответ. Возвращён список счетов клиента.
          content:
            application/json:
              schema:
                type: object
                properties:
                  accounts:
                    type: array
                    items:
                      type: object
                      properties:
                        accountNumber:
                          type: string
                          example: '40802810823200003298'
                          description: Номер счёта клиента
                      required:
                        - accountNumber
        '401':
          description: Ошибка авторизации
          content:
            application/json:
              schema:
                $ref: '#/paths/~1card~1api~1v1~1card-orders/get/responses/401/content/application~1json/schema'
              example:
                error: UNAUTHORIZED
                message: Требуется авторизация
        '403':
          description: Доступ запрещен
          content:
            application/json:
              schema:
                $ref: '#/paths/~1card~1api~1v1~1card-orders/get/responses/401/content/application~1json/schema'
              example:
                error: FORBIDDEN
                message: У вас нет прав на выполнение этой операции
        '404':
          description: Счет или данные по клиенту не найдены
          content:
            application/json:
              schema:
                $ref: '#/paths/~1card~1api~1v1~1card-orders/get/responses/401/content/application~1json/schema'
              example:
                error: NOT FOUND
                message: Страница не найдена.
        '500':
          description: Сервис временно недоступен
          content:
            application/json:
              schema:
                $ref: '#/paths/~1card~1api~1v1~1card-orders/get/responses/401/content/application~1json/schema'
              example:
                error: INTERNAL SERVER ERROR
                message: Сервис временно недоступен. Повторите попытку позже.
  /departments:
    get:
      tags:
        - employee
      summary: получить список названий подразделений банка
      description: Возвращает массив названий подразделений банка.
      responses:
        '200':
          description: список подразделений банка
          content:
            application/json:
              schema:
                type: object
                properties:
                  departments:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          example: d0e63be2-6bdd-4b74-97ab-19e76f5a78b2
                        name:
                          type: string
                          example: отдел кредитования
                      required:
                        - id
                        - name
        '401':
          description: Требуется авторизация
          content:
            application/json:
              schema:
                $ref: '#/paths/~1employee/post/responses/400/content/application~1json/schema'
              examples:
                unauthorized:
                  value:
                    timestamp: '2024-09-03T09:50:05Z'
                    status: 401
                    error: UNAUTHORIZED
                    message: Требуется авторизация
                    path: /api/v1/departments
        '403':
          description: Доступ запрещен
          content:
            application/json:
              schema:
                $ref: '#/paths/~1employee/post/responses/400/content/application~1json/schema'
              examples:
                forbidden:
                  value:
                    timestamp: '2024-09-03T09:50:05Z'
                    status: 403
                    error: FORBIDDEN
                    message: У вас нет прав на выполнение этой операции
                    path: /api/v1/departments
        '500':
          description: внутренняя ошибка сервера
          content:
            application/json:
              schema:
                $ref: '#/paths/~1employee/post/responses/400/content/application~1json/schema'
              examples:
                internalServerError:
                  value:
                    timestamp: '2024-09-03T09:50:05Z'
                    status: 500
                    error: INTERNAL SERVER ERROR
                    message: Внутренняя ошибка сервера. Повторите попытку позже
                    path: /api/v1/departments
  /positions:
    get:
      tags:
        - employee
      summary: получить список названий должностей
      description: Возвращает массив названий должностей
      responses:
        '200':
          description: список должностей
          content:
            application/json:
              schema:
                type: object
                properties:
                  positions:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          example: d0e63be2-6bdd-4b74-97ab-19e76f5a78b2
                        name:
                          type: string
                          example: Операционист
                      required:
                        - id
                        - name
        '401':
          description: Требуется авторизация
          content:
            application/json:
              schema:
                $ref: '#/paths/~1employee/post/responses/400/content/application~1json/schema'
              examples:
                unauthorized:
                  value:
                    timestamp: '2024-09-03T09:50:05Z'
                    status: 401
                    error: UNAUTHORIZED
                    message: Требуется авторизация
                    path: /api/v1/positions
        '403':
          description: Доступ запрещен
          content:
            application/json:
              schema:
                $ref: '#/paths/~1employee/post/responses/400/content/application~1json/schema'
              examples:
                forbidden:
                  value:
                    timestamp: '2024-09-03T09:50:05Z'
                    status: 403
                    error: FORBIDDEN
                    message: У вас нет прав на выполнение этой операции
                    path: /api/v1/positions
        '500':
          description: внутренняя ошибка сервера
          content:
            application/json:
              schema:
                $ref: '#/paths/~1employee/post/responses/400/content/application~1json/schema'
              examples:
                internalServerError:
                  value:
                    timestamp: '2024-09-03T09:50:05Z'
                    status: 500
                    error: INTERNAL SERVER ERROR
                    message: Внутренняя ошибка сервера. Повторите попытку позже
                    path: /api/v1/positions
  /bank-addresses:
    get:
      tags:
        - info
      summary: получить список адресов офисов банка
      description: Возвращает массив адресов офисов банка
      responses:
        '200':
          description: список адресов офисов банка
          content:
            application/json:
              schema:
                type: object
                properties:
                  bank-addresses:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          example: d0e63be2-6bdd-4b74-97ab-19e76f5a78b2
                        countyName:
                          type: string
                          example: Центральный федеральный округ
                        cityName:
                          type: string
                          example: Москва
                        streetType:
                          type: string
                          example: улица
                        streetTypeShort:
                          type: string
                          example: ул.
                        street:
                          type: string
                          example: Энтузиастов
                        streetEn:
                          type: string
                          example: Entuziastov
                        house:
                          type: string
                          example: 5 к.1
                        houseEn:
                          type: string
                          example: 5 bldg.1
                        latitude:
                          type: number
                          example: 55.746481
                        longitude:
                          type: number
                          example: 37.682619
                        metroStation:
                          type: string
                          example: Пушкинская
                          nullable: true
                      required:
                        - id
                        - countyName
                        - cityName
                        - streetType
                        - streetTypeShort
                        - street
                        - streetEn
                        - house
                        - houseEn
                        - latitude
                        - longitude
                        - metroStation
        '500':
          description: внутренняя ошибка сервера
          content:
            application/json:
              schema:
                $ref: '#/paths/~1employee/post/responses/400/content/application~1json/schema'
              examples:
                internalServerError:
                  value:
                    timestamp: '2024-09-03T09:50:05Z'
                    status: 500
                    error: INTERNAL SERVER ERROR
                    message: Внутренняя ошибка сервера. Повторите попытку позже
                    path: /api/v1/bankAddress
  /employee:
    post:
      tags:
        - employee
      summary: зарегистрировать нового сотрудника в системе
      description: Создает нового сотрудника в системе.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                firstName:
                  type: string
                  description: имя сотрудника
                  example: Алексей
                lastName:
                  type: string
                  description: фамилия сотрудника
                  example: Иванов
                pantronymic:
                  type: string
                  description: отчество сотрудника
                  nullable: true
                  example: Васильевич
                birthday:
                  type: string
                  description: |
                    дата в формате DD.MM.YYYY.
                  example: 17.08.1999
                phoneNumber:
                  type: string
                  description: телефонный номер сотрудника
                  example: '+79996661100'
                email:
                  type: string
                  description: электронная почта сотрудника
                  example: leha12@gmail.com
                bankAddressId:
                  type: string
                  description: идентификатор адреса офиса
                  example: d0e63be2-6bdd-4b74-97ab-19e76f5a78b2
                departmentId:
                  type: string
                  description: идентификатор подразделения
                  example: d0e63be2-6bdd-4b74-97ab-19e76f5a78b2
                positionId:
                  type: string
                  description: идентификатор должности
                  example: d0e63be2-6bdd-4b74-97ab-19e76f5a78b2
              required:
                - firstName
                - lastName
                - pantronymic
                - birthday
                - phoneNumber
                - email
                - bankAddressId
                - departmentId
                - positionId
      responses:
        '201':
          description: Успешное добавление нового сотрудника
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    example: d0e63be2-6bdd-4b74-97ab-19e76f5a78b2
                  firstName:
                    type: string
                    description: имя сотрудника
                    example: Алексей
                  lastName:
                    type: string
                    description: фамилия сотрудника
                    example: Иванов
                  pantronymic:
                    type: string
                    description: отчество сотрудника
                    nullable: true
                    example: Васильевич
                  birthday:
                    type: string
                    description: |
                      дата в формате DD.MM.YYYY.
                    example: 17.08.1999
                  phoneNumber:
                    type: string
                    description: телефонный номер сотрудника
                    example: '+79996661100'
                  email:
                    type: string
                    description: электронная почта сотрудника
                    example: leha12@gmail.com
                  status:
                    type: string
                    description: статус сотрудника
                    example: ACTIVE
                  bankAddressId:
                    type: string
                    description: идентификатор адреса офиса
                    example: d0e63be2-6bdd-4b74-97ab-19e76f5a78b2
                  departmentId:
                    type: string
                    description: идентификатор подразделения
                    example: d0e63be2-6bdd-4b74-97ab-19e76f5a78b2
                  positionId:
                    type: string
                    description: идентификатор должности
                    example: d0e63be2-6bdd-4b74-97ab-19e76f5a78b2
                  corpEmail:
                    type: string
                    description: электронная почта (логин) аккаунта
                    example: a.ivanov@libertybank.ru
                required:
                  - firstName
                  - lastName
                  - pantronymic
                  - birthday
                  - phoneNumber
                  - email
                  - status
                  - bankAddressId
                  - departmentId
                  - positionId
                  - corpEmail
        '400':
          description: невалидный запрос
          content:
            application/json:
              schema:
                type: object
                properties:
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-09-03T09:50:05Z'
                  status:
                    type: integer
                    example: 500
                  error:
                    type: string
                    example: INTERNAL SERVER ERROR
                  message:
                    type: string
                    example: Внутренняя ошибка сервера. Повторите попытку позже.
                  path:
                    type: string
                    example: /api/v1/card-products
                required:
                  - timestamp
                  - status
                  - error
                  - message
                  - path
              examples:
                unauthorized:
                  value:
                    timestamp: '2024-09-03T09:50:05Z'
                    status: 400
                    error: BAD REQUEST
                    message: невалидный запрос
                    path: /api/v1/employee
        '401':
          description: Требуется авторизация
          content:
            application/json:
              schema:
                $ref: '#/paths/~1employee/post/responses/400/content/application~1json/schema'
              examples:
                unauthorized:
                  value:
                    timestamp: '2024-09-03T09:50:05Z'
                    status: 401
                    error: UNAUTHORIZED
                    message: Требуется авторизация
                    path: /api/v1/employee
        '403':
          description: Доступ запрещен
          content:
            application/json:
              schema:
                $ref: '#/paths/~1employee/post/responses/400/content/application~1json/schema'
              examples:
                forbidden:
                  value:
                    timestamp: '2024-09-03T09:50:05Z'
                    status: 403
                    error: FORBIDDEN
                    message: У вас нет прав на выполнение этой операции
                    path: /api/v1/employee
        '409':
          description: сотрудник уже существует
          content:
            application/json:
              schema:
                $ref: '#/paths/~1employee/post/responses/400/content/application~1json/schema'
              examples:
                forbidden:
                  value:
                    timestamp: '2024-09-03T09:50:05Z'
                    status: 409
                    error: CONFLICT
                    message: сотрудник уже существует!
                    uri: /api/v1/employee
        '500':
          description: внутренняя ошибка сервера
          content:
            application/json:
              schema:
                $ref: '#/paths/~1employee/post/responses/400/content/application~1json/schema'
              examples:
                internalServerError:
                  value:
                    timestamp: '2024-09-03T09:50:05Z'
                    status: 500
                    error: INTERNAL SERVER ERROR
                    message: Внутренняя ошибка сервера. Повторите попытку позже
                    path: /api/v1/employee
  /employee-auth:
    post:
      tags:
        - employee-auth
      summary: создать аккаунт нового сотрудника в системе
      description: создает нового аккаунта сотрудника в системе.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                employeeId:
                  type: string
                  description: идентификатор сотрудника
                  example: d0e63be2-6bdd-4b74-97ab-19e76f5a78b2
                firstName:
                  type: string
                  description: имя сотрудника
                  example: Алексей
                lastName:
                  type: string
                  description: фамилия сотрудника
                  example: Иванов
              required:
                - id
                - firstName
                - lastName
      responses:
        '201':
          description: Успешное создание нового аккаунта для сотрудника
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    description: идентификатор аккаунта
                    example: d0e63be2-6bdd-4b74-97ab-19e76f5a78b2
                  corpEmail:
                    type: string
                    description: электронная почта (логин) аккаунта
                    example: a.ivanov@libertybank.ru
                  role:
                    type: string
                    description: роль аккаунта в системе
                    nullable: true
                    example: OPERATOR
                  createdAt:
                    type: string
                    description: дата и время создания с тайм-зоной
                    example: '2025-10-19 10:23:54+02'
                  status:
                    type: string
                    description: статус аккаунта
                    example: CREATED
                  employeeId:
                    type: string
                    description: 'идентификатор сотрудника, к которому привязан аккаунт'
                    example: d0e63be2-6bdd-4b74-97ab-19e76f5a78b2
                required:
                  - id
                  - corpEmail
                  - role
                  - createdAt
                  - status
                  - employeeId
        '400':
          description: невалидный запрос
          content:
            application/json:
              schema:
                $ref: '#/paths/~1employee/post/responses/400/content/application~1json/schema'
              examples:
                unauthorized:
                  value:
                    timestamp: '2024-09-03T09:50:05Z'
                    status: 400
                    error: BAD REQUEST
                    message: невалидный запрос
                    path: /api/v1/employee-auth
        '401':
          description: Требуется авторизация
          content:
            application/json:
              schema:
                $ref: '#/paths/~1employee/post/responses/400/content/application~1json/schema'
              examples:
                unauthorized:
                  value:
                    timestamp: '2024-09-03T09:50:05Z'
                    status: 401
                    error: UNAUTHORIZED
                    message: Требуется авторизация
                    path: /api/v1/employee-auth
        '403':
          description: Доступ запрещен
          content:
            application/json:
              schema:
                $ref: '#/paths/~1employee/post/responses/400/content/application~1json/schema'
              examples:
                forbidden:
                  value:
                    timestamp: '2024-09-03T09:50:05Z'
                    status: 403
                    error: FORBIDDEN
                    message: У вас нет прав на выполнение этой операции
                    path: /api/v1/employee-auth
        '500':
          description: внутренняя ошибка сервера
          content:
            application/json:
              schema:
                $ref: '#/paths/~1employee/post/responses/400/content/application~1json/schema'
              examples:
                internalServerError:
                  value:
                    timestamp: '2024-09-03T09:50:05Z'
                    status: 500
                    error: INTERNAL SERVER ERROR
                    message: Внутренняя ошибка сервера. Повторите попытку позже
                    path: /api/v1/employee-auth
  /auth/api/v1/login:
    post:
      summary: Авторизация сотрудника через корпоративную почту
      description: Метод позволяет сотруднику авторизоваться в системе с использованием корпоративного email и пароля.
      tags:
        - Authorization
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  example: employee@example.com
                  description: Корпоративная почта сотрудника
                password:
                  type: string
                  example: SecurePassword123!
                  description: Пароль сотрудника (в зашифрованном виде)
              required:
                - email
                - password
      responses:
        '200':
          description: Успешная авторизация
          content:
            application/json:
              schema:
                type: object
                properties:
                  accessToken:
                    type: string
                    description: JWT access token
                    example: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI5M2ZhZGM4ZS1iZWZmLTRhMDEtYmY5YS05OWQwYTVjY2I2ODkiLCJlbWFpbCI6ImVtcGxveWVlQGV4YW1wbGUuY29tIiwicm9sZXMiOlsiQWRtaW4iLCJFbXBsb3llZSJdLCJpYXQiOjE2ODExOTIwMDB9
                required:
                  - accessToken
        '400':
          description: Неверный запрос (невалидные данные)
          content:
            application/json:
              schema:
                type: object
                properties:
                  uri:
                    type: string
                    example: /auth/api/v1/login
                    description: Путь к эндпоинту
                  status:
                    type: string
                    example: '400'
                    description: Код состояния HTTP
                  message:
                    type: string
                    example: Invalid request data.
                    description: Сообщение об ошибке
                  errors:
                    type: array
                    items:
                      type: object
                      properties:
                        field:
                          type: string
                          example: email
                          description: Поле с ошибкой
                        message:
                          type: string
                          example: Must be a valid email address
                          description: Описание ошибки
                      required:
                        - field
                        - message
                    description: Список ошибок валидации
                  timestamp:
                    type: string
                    format: date-time
                    example: '2025-04-10T18:30:00Z'
                    description: Временная метка события
                required:
                  - uri
                  - status
                  - message
                  - errors
                  - timestamp
        '401':
          description: Неверный логин или пароль
          content:
            application/json:
              schema:
                type: object
                properties:
                  uri:
                    type: string
                    example: /auth/api/v1/login
                    description: Путь к эндпоинту
                  status:
                    type: string
                    example: '401'
                    description: Код состояния HTTP
                  message:
                    type: string
                    example: Unauthorized.
                    description: Сообщение об ошибке
                  remaining_attempts:
                    type: number
                    example: 2
                    description: Количество оставшихся попыток
                  timestamp:
                    type: string
                    format: date-time
                    example: '2025-04-10T18:30:00Z'
                    description: Временная метка события
                required:
                  - uri
                  - status
                  - message
                  - remaining_attempts
                  - timestamp
        '403':
          description: Учетная запись заблокирована
          content:
            application/json:
              schema:
                type: object
                properties:
                  uri:
                    type: string
                    example: /auth/api/v1/login
                    description: Путь к эндпоинту
                  status:
                    type: string
                    example: '403'
                    description: Код состояния HTTP
                  message:
                    type: string
                    example: Your account is locked due to multiple failed login attempts.
                    description: Сообщение об ошибке
                  timestamp:
                    type: string
                    format: date-time
                    example: '2025-04-10T18:30:00Z'
                    description: Временная метка события
                required:
                  - uri
                  - status
                  - message
                  - timestamp
        '404':
          description: Email не зарегистрирован в системе
          content:
            application/json:
              schema:
                type: object
                properties:
                  uri:
                    type: string
                    example: /auth/api/v1/login
                    description: Путь к эндпоинту
                  status:
                    type: string
                    example: '404'
                    description: Код состояния HTTP
                  message:
                    type: string
                    example: Email not registered in the system.
                    description: Сообщение об ошибке
                  timestamp:
                    type: string
                    format: date-time
                    example: '2025-04-10T18:30:00Z'
                    description: Временная метка события
                required:
                  - uri
                  - status
                  - message
                  - timestamp
        '500':
          description: Ошибка сервера
          content:
            application/json:
              schema:
                $ref: '#/paths/~1auth~1api~1v1~1login/post/responses/401/content/application~1json/schema'
      security:
        - bearerAuth: []
  /client/api/v1/customers/delete:
    patch:
      summary: Архивация клиента
      operationId: archiveCustomer
      tags:
        - Customer
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - customerId
              properties:
                customerId:
                  type: string
                  format: uuid
                  description: Уникальный идентификатор клиента
                  example: 123e4567-e89b-12d3-a456-426614174000
      responses:
        '200':
          description: Клиент успешно архивирован
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: Клиент успешно архивирован
                  id:
                    type: string
                    format: uuid
                    example: 123e4567-e89b-12d3-a456-426614174000
                  customer_status:
                    type: string
                    example: archive
        '400':
          description: Некорректный статус клиента
          content:
            application/json:
              schema:
                type: object
                properties:
                  timestamp:
                    type: string
                    format: date-time
                    example: '2025-06-04T14:45:00Z'
                  status:
                    type: integer
                    example: 400
                  error:
                    type: string
                    example: BAD REQUEST
                  message:
                    type: string
                    example: 'Некорректный статус: значение должно быть ''archive'''
                  path:
                    type: string
                    example: /client/api/v1/customers/delete
        '403':
          description: Требуется авторизация
          content:
            application/json:
              schema:
                type: object
                properties:
                  timestamp:
                    type: string
                    format: date-time
                    example: '2025-06-04T14:46:10Z'
                  status:
                    type: integer
                    example: 403
                  error:
                    type: string
                    example: FORBIDDEN
                  message:
                    type: string
                    example: Необходима авторизация
                  path:
                    type: string
                    example: /client/api/v1/customers/delete
        '404':
          description: Клиент не найден
          content:
            application/json:
              schema:
                type: object
                properties:
                  timestamp:
                    type: string
                    format: date-time
                    example: '2025-06-04T14:47:22Z'
                  status:
                    type: integer
                    example: 404
                  error:
                    type: string
                    example: NOT FOUND
                  message:
                    type: string
                    example: Клиент с ID = 123e4567-e89b-12d3-a456-426614174000 не существует
                  path:
                    type: string
                    example: /client/api/v1/customers/delete
        '409':
          description: У клиента есть активные банковские продукты
          content:
            application/json:
              schema:
                type: object
                properties:
                  timestamp:
                    type: string
                    format: date-time
                    example: '2025-06-04T14:48:37Z'
                  status:
                    type: integer
                    example: 409
                  error:
                    type: string
                    example: CONFLICT
                  message:
                    type: string
                    example: У клиента есть активные продукты
                  path:
                    type: string
                    example: /client/api/v1/customers/delete
        '500':
          description: Внутренняя ошибка сервиса
          content:
            application/json:
              schema:
                type: object
                properties:
                  timestamp:
                    type: string
                    format: date-time
                    example: '2025-06-04T14:49:51Z'
                  status:
                    type: integer
                    example: 500
                  error:
                    type: string
                    example: INTERNAL SERVER ERROR
                  message:
                    type: string
                    example: Сервис временно недоступен. Повторите попытку позже
                  path:
                    type: string
                    example: /client/api/v1/customers/delete
  /employee-auth/changePassword:
    patch:
      security:
        - bearerAuth: []
      tags:
        - Авторизация
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                currentPassword:
                  type: string
                  example: OldPassword123!
                  description: Текущий пароль сотрудника
                newPassword:
                  type: string
                  example: SecurePassword123!
                  description: Новый пароль сотрудника
              required:
                - currentPassword
                - newPassword
      summary: Изменение пароля сотрудника
      description: Успешный ответ c сообщением об изменении пароля
      responses:
        '200':
          description: Успешный ответ c сообщением об изменении пароля
          content:
            application/json:
              schema:
                type: object
                required:
                  - success
                  - message
                properties:
                  success:
                    type: boolean
                    example: true
                    description: Флаг успешного выполнения
                  message:
                    type: string
                    example: Пароль успешно изменен
                    description: Человекочитаемое сообщение
        '401':
          description: Невалидный токен
          content:
            application/json:
              schema:
                type: object
                required:
                  - timestamp
                  - status
                  - error
                  - message
                  - path
                properties:
                  timestamp:
                    type: string
                    format: timestamptz
                    description: Временная метка
                  status:
                    type: string
                    description: Код состояния HTTP
                  error:
                    type: string
                    description: Пояснение к коду состояния
                  message:
                    type: string
                    description: Сообщение об ошибке
                  path:
                    type: string
                    description: Путь к EP
              example:
                timestamp: '2024-09-03T09:50:05Z'
                status: 401
                error: UNAUTHORIZED
                message: Ошибка авторизации
                path: /employee-auth/api/v1/employee-auth/changePassword
        '403':
          description: Введен неверный текущий пароль
          content:
            application/json:
              schema:
                $ref: '#/paths/~1employee-auth~1changePassword/patch/responses/401/content/application~1json/schema'
              example:
                timestamp: '2024-09-03T09:50:05Z'
                status: 403
                error: UNAUTHORIZED
                message: Неверный текущий пароль
                path: /employee-auth/api/v1/employee-auth/changePassword
        '409':
          description: 'Пароль совпадает с тем, который использовался ранее'
          content:
            application/json:
              schema:
                $ref: '#/paths/~1employee-auth~1changePassword/patch/responses/401/content/application~1json/schema'
              example:
                timestamp: '2024-09-03T09:50:05Z'
                status: 409
                error: CONFLICT
                message: Пароль уже использовался ранее
                path: /employee-auth/api/v1/employee-auth/changePassword
        '500':
          description: Внутренняя ошибка сервера
          content:
            application/json:
              schema:
                $ref: '#/paths/~1employee-auth~1changePassword/patch/responses/401/content/application~1json/schema'
              example:
                timestamp: '2024-09-03T09:50:05Z'
                status: 500
                error: INTERNAL SERVER ERROR
                message: Что-то пошло не так. Повторите попытку позже
                path: /employee-auth/api/v1/employee-auth/changePassword
  '/bank-addresses/profile-view/{bankAddressId}':
    get:
      security: []
      parameters:
        - name: bankAddressId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      tags:
        - info
      summary: Получить адрес офиса банка
      description: Возвращает адрес офиса банка
      responses:
        '200':
          description: Адрес офиса банка
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                    example: d0e63be2-6bdd-4b74-97ab-19e76f5a78b2
                  cityName:
                    type: string
                    example: Москва
                  streetTypeShort:
                    type: string
                    example: ул.
                  street:
                    type: string
                    example: Энтузиастов
                  house:
                    type: string
                    example: 5 к.1
                  phoneNumber:
                    type: string
                    description: номер телефона в формате +X (XXX) XXX-XX-XX
                    example: +7 (999) 924-77-66
                required:
                  - id
                  - cityName
                  - streetTypeShort
                  - street
                  - house
                  - phoneNumber
        '500':
          description: внутренняя ошибка сервера
          content:
            application/json:
              schema:
                $ref: '#/paths/~1employees~1%7BemployeeId%7D/get/responses/401/content/application~1json/schema'
              examples:
                internalServerError:
                  value:
                    timestamp: '2024-09-03T09:50:05Z'
                    status: 500
                    error: INTERNAL SERVER ERROR
                    message: Внутренняя ошибка сервера. Повторите попытку позже
                    path: '/api/v1/bank-addresses/profile-view/{bankAddressId}'
  /employee-accounts/with-last-login:
    get:
      parameters:
        - name: employeeId
          in: query
          required: true
          schema:
            type: string
            format: uuid
      tags:
        - employee-auth
      summary: Получить учетную запись сотрудника с датой и временем последнего входа
      description: Возвращает учетную запись сотрудника с датой и временем последнего входа
      security:
        - bearerAuth:
            - SUPER_ADMIN
      responses:
        '200':
          description: Учетная запись сотрудника с датой и временем последнего входа
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                    example: d0e63be2-6bdd-4b74-97ab-19e76f5a78b2
                  corpEmail:
                    type: string
                    example: i.ivanov2@libertybank.ru
                  createdAt:
                    type: string
                    description: Дата в формате DD.MM.YYYY
                    example: 19.10.2025
                  status:
                    type: string
                    example: ACTIVE
                  lastLogin:
                    type: string
                    description: 'Дата и время в формате DD.MM.YYYY HH:MM:SS'
                    example: '19.10.2025 08:45:10'
                    nullable: true
                required:
                  - id
                  - corpEmail
                  - createdAt
                  - status
                  - lastLogin
        '401':
          description: Требуется авторизация
          content:
            application/json:
              schema:
                $ref: '#/paths/~1employees~1%7BemployeeId%7D/get/responses/401/content/application~1json/schema'
              examples:
                unauthorized:
                  value:
                    timestamp: '2024-09-03T09:50:05Z'
                    status: 401
                    error: UNAUTHORIZED
                    message: Требуется авторизация
                    path: /api/v1/employee-accounts/with-last-login
        '403':
          description: Доступ запрещен
          content:
            application/json:
              schema:
                $ref: '#/paths/~1employees~1%7BemployeeId%7D/get/responses/401/content/application~1json/schema'
              examples:
                forbidden:
                  value:
                    timestamp: '2024-09-03T09:50:05Z'
                    status: 403
                    error: FORBIDDEN
                    message: У вас нет прав на выполнение этой операции
                    path: /api/v1/employee-accounts/with-last-login
        '500':
          description: внутренняя ошибка сервера
          content:
            application/json:
              schema:
                $ref: '#/paths/~1employees~1%7BemployeeId%7D/get/responses/401/content/application~1json/schema'
              examples:
                internalServerError:
                  value:
                    timestamp: '2024-09-03T09:50:05Z'
                    status: 500
                    error: INTERNAL SERVER ERROR
                    message: Внутренняя ошибка сервера. Повторите попытку позже
                    path: /api/v1/employee-accounts/with-last-login
  '/employees/{employeeId}':
    get:
      parameters:
        - name: employeeId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      tags:
        - employee
      summary: Получить информацию о сотруднике
      description: Возвращает данные о сотруднике
      responses:
        '200':
          description: сотрудник
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                    example: d0e63be2-6bdd-4b74-97ab-19e76f5a78b2
                  firstName:
                    type: string
                    example: Алексей
                  lastName:
                    type: string
                    example: Иванов
                  patronymic:
                    type: string
                    example: Васильевич
                    nullable: true
                  birthday:
                    type: string
                    description: Дата в формате DD.MM.YYYY
                    example: 30.01.2000
                  phoneNumber:
                    type: string
                    description: номер телефона в формате +X (XXX) XXX-XX-XX
                    example: +7 (999) 666-11-00
                  email:
                    type: string
                    example: petrpetrov@gmail.com
                  bankAddressId:
                    type: string
                    format: uuid
                    example: 42e0623c-6e6d-11ed-a1eb-0242ac120004
                  positionName:
                    type: string
                    example: Операционист
                  departmentName:
                    type: string
                    example: Отдел кредитования
                required:
                  - id
                  - firstName
                  - lastName
                  - patronymic
                  - birthday
                  - phoneNumber
                  - email
                  - status
                  - bankAddressId
                  - positionName
                  - departmentName
        '401':
          description: Требуется авторизация
          content:
            application/json:
              schema:
                type: object
                properties:
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-09-03T09:50:05Z'
                  status:
                    type: integer
                    example: 500
                  error:
                    type: string
                    example: INTERNAL SERVER ERROR
                  message:
                    type: string
                    example: Внутренняя ошибка сервера. Повторите попытку позже.
                  path:
                    type: string
                    example: /api/v1/employees
                required:
                  - timestamp
                  - status
                  - error
                  - message
                  - path
              examples:
                unauthorized:
                  value:
                    timestamp: '2024-09-03T09:50:05Z'
                    status: 401
                    error: UNAUTHORIZED
                    message: Требуется авторизация
                    path: /api/v1/employees
        '403':
          description: Доступ запрещен
          content:
            application/json:
              schema:
                $ref: '#/paths/~1employees~1%7BemployeeId%7D/get/responses/401/content/application~1json/schema'
              examples:
                forbidden:
                  value:
                    timestamp: '2024-09-03T09:50:05Z'
                    status: 403
                    error: FORBIDDEN
                    message: У вас нет прав на выполнение этой операции
                    path: /api/v1/employees
        '500':
          description: внутренняя ошибка сервера
          content:
            application/json:
              schema:
                $ref: '#/paths/~1employees~1%7BemployeeId%7D/get/responses/401/content/application~1json/schema'
              examples:
                internalServerError:
                  value:
                    timestamp: '2024-09-03T09:50:05Z'
                    status: 500
                    error: INTERNAL SERVER ERROR
                    message: Внутренняя ошибка сервера. Повторите попытку позже
                    path: /api/v1/employees
  '/employee-manage-service/profiles/{employeeId}':
    get:
      parameters:
        - name: employeeId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      tags:
        - employee-manage-service
      summary: Получить карточку профиля сотрудника
      description: 'Аггрегирует данные из info, employee и employee-auth сервисов для формирования карточки профиля сотрудника'
      responses:
        '200':
          description: карточка профиля сотруднкиа
          content:
            application/json:
              schema:
                type: object
                properties:
                  employee:
                    $ref: '#/paths/~1employees~1%7BemployeeId%7D/get/responses/200/content/application~1json/schema'
                  account:
                    $ref: '#/paths/~1employee-accounts~1with-last-login/get/responses/200/content/application~1json/schema'
                  bankAddressProfileView:
                    $ref: '#/paths/~1bank-addresses~1profile-view~1%7BbankAddressId%7D/get/responses/200/content/application~1json/schema'
        '401':
          description: Требуется авторизация
          content:
            application/json:
              schema:
                $ref: '#/paths/~1employees~1%7BemployeeId%7D/get/responses/401/content/application~1json/schema'
              examples:
                unauthorized:
                  value:
                    timestamp: '2024-09-03T09:50:05Z'
                    status: 401
                    error: UNAUTHORIZED
                    message: Требуется авторизация
                    path: '/api/v1/employee-manage-service/profiles/{employeeId}'
        '403':
          description: Доступ запрещен
          content:
            application/json:
              schema:
                $ref: '#/paths/~1employees~1%7BemployeeId%7D/get/responses/401/content/application~1json/schema'
              examples:
                forbidden:
                  value:
                    timestamp: '2024-09-03T09:50:05Z'
                    status: 403
                    error: FORBIDDEN
                    message: У вас нет прав на выполнение этой операции
                    path: '/api/v1/employee-manage-service/profiles/{employeeId}'
        '500':
          description: внутренняя ошибка сервера
          content:
            application/json:
              schema:
                $ref: '#/paths/~1employees~1%7BemployeeId%7D/get/responses/401/content/application~1json/schema'
              examples:
                internalServerError:
                  value:
                    timestamp: '2024-09-03T09:50:05Z'
                    status: 500
                    error: INTERNAL SERVER ERROR
                    message: Внутренняя ошибка сервера. Повторите попытку позже
                    path: '/api/v1/employee-manage-service/profiles/{employeeId}'
  '/api/v1/notifications/{customerId}':
    get:
      tags:
        - Notification
      summary: Установка SSE-соединения
      description: |
        Устанавливает Server-Sent Events (SSE) соединение для получения уведомлений в реальном времени.
        Сервер будет поддерживать соединение открытым и отправлять события в формате:
        ```
        event: <тип_события>
        data: <json_данные>
        ```
      parameters:
        - name: customerId
          in: path
          description: UUID клиента
          required: true
          schema:
            type: string
            format: uuid
          example: a1b2c3d4-e5f6-7890-g1h2-i3j4k5l6m7n8
        - name: Accept
          in: header
          description: Должен быть text/event-stream для SSE
          required: true
          schema:
            type: string
            enum:
              - text/event-stream
          example: text/event-stream
        - name: Cache-Control
          in: header
          description: Отключает кеширование
          required: true
          schema:
            type: string
            enum:
              - no-cache
          example: no-cache
        - name: Connection
          in: header
          description: Поддержка постоянного соединения
          required: true
          schema:
            type: string
            enum:
              - keep-alive
          example: keep-alive
      responses:
        '200':
          description: |
            SSE-соединение успешно установлено.
            Сервер будет отправлять события в формате:
            ```
            event: notification
            data: {
              "notification_id": "abf1b69f-e2dd-49f1-b5e0-df923f0a9a5f",
              "user_id": "eac1246d-59e2-4b89-a147-0e890afcc53d",
              "title": "Смена пароля",
              "message": "До блокировки вашего аккаунта остался 1 день",
              "severity": "CRITICAL",
              "delivered_at": "2025-05-29T09:00:00Z"
            }
            ```
          headers:
            Content-Type:
              schema:
                type: string
              example: text/event-stream
        '401':
          description: Требуется авторизация
          content:
            application/json:
              schema:
                type: object
                required:
                  - uri
                  - statusCode
                  - error
                  - message
                  - timestamp
                properties:
                  uri:
                    type: string
                    example: '/api/v1/notifications/{notification_id}'
                  statusCode:
                    type: integer
                    example: 500
                  error:
                    type: string
                    example: INTERNAL SERVER ERROR
                  message:
                    type: string
                    example: Внутренняя ошибка сервера. Повторите попытку позже.
                  timestamp:
                    type: string
                    format: date-time
                    example: '2024-09-03T09:50:05Z'
              examples:
                unauthorized:
                  value:
                    uri: '/api/v1/notifications/{customerId}'
                    statusCode: 401
                    error: UNAUTHORIZED
                    message: Требуется авторизация
                    timestamp: '2024-09-03T09:50:05Z'
        '500':
          description: Внутренняя ошибка сервера
          content:
            application/json:
              schema:
                $ref: '#/paths/~1api~1v1~1notifications~1%7BcustomerId%7D/get/responses/401/content/application~1json/schema'
              examples:
                internalError:
                  value:
                    uri: '/api/v1/notifications/{customerId}'
                    statusCode: 500
                    error: INTERNAL SERVER ERROR
                    message: Не удалось установить SSE-соединение
                    timestamp: '2024-09-03T09:50:05Z'
  '/api/v1/notifications/{notification_id}':
    patch:
      tags:
        - Notification
      summary: Скрыть уведомление или все уведомления пользователя
      description: |
        Меняет статус уведомлений на DISMISSED. Если указано applyToAll: true, будут скрыты все уведомления пользователя со статусом SENT. В противном случае — только уведомление по notification_id.
      parameters:
        - name: notification_id
          in: path
          description: UUID уведомления
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - status
              properties:
                status:
                  type: string
                  enum:
                    - DISMISSED
                  description: Новый статус уведомления
                applyToAll:
                  type: boolean
                  description: |
                    Если `true`, скрывает все уведомления пользователя со статусом `SENT`. Если `false` или отсутствует — скрывает только одно уведомление по `notification_id`.
                  example: true
      responses:
        '200':
          description: Статус обновлен
        '401':
          description: Требуется авторизация
          content:
            application/json:
              schema:
                $ref: '#/paths/~1api~1v1~1notifications~1%7BcustomerId%7D/get/responses/401/content/application~1json/schema'
              examples:
                unauthorized:
                  value:
                    uri: '/api/v1/notifications/{notification_id}'
                    statusCode: 401
                    error: UNAUTHORIZED
                    message: Требуется авторизация
                    timestamp: '2024-09-03T09:50:05Z'
        '403':
          description: Доступ запрещен
          content:
            application/json:
              schema:
                $ref: '#/paths/~1api~1v1~1notifications~1%7BcustomerId%7D/get/responses/401/content/application~1json/schema'
              examples:
                forbidden:
                  value:
                    uri: '/api/v1/notifications/{notification_id}'
                    statusCode: 403
                    error: FORBIDDEN
                    message: У вас нет прав на выполнение этой операции
                    timestamp: '2024-09-03T09:50:05Z'
        '500':
          description: Внутренняя ошибка сервера
          content:
            application/json:
              schema:
                $ref: '#/paths/~1api~1v1~1notifications~1%7BcustomerId%7D/get/responses/401/content/application~1json/schema'
              examples:
                internalServerError:
                  value:
                    uri: '/api/v1/notifications/{notification_id}'
                    statusCode: 500
                    error: INTERNAL SERVER ERROR
                    message: Внутренняя ошибка сервера. Повторите попытку позже
                    timestamp: '2024-09-03T09:50:05Z'
  /accounts(fromTransfer):
    get:
      summary: Запрос на информацию по счетам клиента
      operationId: checkAccounts
      tags:
        - Account
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: customerId
          description: Идентификатор клиента
          required: true
          schema:
            type: string
        - in: query
          name: isActive
          description: Статус активности
          required: true
          schema:
            type: string
            enum:
              - Active
      responses:
        '200':
          description: ОК
          content:
            application/json:
              schema:
                type: array
                items:
                  required:
                    - accountId
                    - accountNumber
                    - balance
                    - currency
                  type: object
                  properties:
                    accountId:
                      type: string
                      example: abf1b69f-e2dd-49f1-b5e0-df923f0a9a5f
                    accountNumber:
                      type: string
                      example: 12341234123412340000
                    balance:
                      type: number
                      format: double
                      example: 123.21
                    currency:
                      type: string
                      example: RUB
        '401':
          description: Требуется авторизация
          content:
            application/json:
              schema:
                $ref: '#/paths/~1account/get/responses/500/content/application~1json/schema'
              examples:
                BadRequest:
                  value:
                    timestamp: '2024-09-03T09:50:05Z'
                    status: 401
                    error: Unauthorized
                    message: Требуется авторизация
                    paths: api/v1/accounts
        '403':
          description: Нет прав на выполнение
          content:
            application/json:
              schema:
                $ref: '#/paths/~1account/get/responses/500/content/application~1json/schema'
              examples:
                Forbidden:
                  value:
                    timestamp: '2024-09-03T09:50:05Z'
                    status: 403
                    error: Forbidden
                    message: У Вас нет прав на выполнение данной операции
                    paths: api/v1/accounts
        '500':
          description: Внутренняя ошибка сервера
          content:
            application/json:
              schema:
                $ref: '#/paths/~1account/get/responses/500/content/application~1json/schema'
              examples:
                InternalServerError:
                  value:
                    timestamp: '2024-09-03T09:50:05Z'
                    status: 500
                    error: Internal Server Error
                    message: Внутренняя ошибка сервера
                    paths: api/v1/accounts
  /transfer:
    get:
      summary: Расчет комиссии перевода
      operationId: calcFee
      tags:
        - Transfer
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: senderId
          description: Идентификатор счета-отправителя
          required: true
          schema:
            type: string
        - in: query
          name: recipientId
          description: Идентификатор счета-получателя
          required: true
          schema:
            type: string
        - in: query
          name: amount
          description: Сумма транзакции
          required: true
          schema:
            type: number
      responses:
        '200':
          description: ОК
          content:
            application/json:
              schema:
                type: array
                items:
                  required:
                    - senderId
                    - recipientId
                    - amount
                    - fee
                  type: object
                  properties:
                    senderId:
                      type: string
                      example: 42424kohdyr-erjlhyroyh46464
                    recipientId:
                      type: string
                      example: 42424kohdyr-erjlhyroyh46464
                    amount:
                      type: number
                      format: double
                      example: 1234.12
                    fee:
                      type: number
                      format: double
                      example: 12.34
        '400':
          description: Некорректный запрос
          content:
            application/json:
              schema:
                $ref: '#/paths/~1account/get/responses/500/content/application~1json/schema'
              examples:
                BadRequest:
                  value:
                    timestamp: '2024-09-03T09:50:05Z'
                    status: 400
                    error: Bad Request
                    message: Некорректный запрос
                    paths: api/v1/transfer
        '403':
          description: Нет прав на выполнение
          content:
            application/json:
              schema:
                $ref: '#/paths/~1account/get/responses/500/content/application~1json/schema'
              examples:
                Forbidden:
                  value:
                    timestamp: '2024-09-03T09:50:05Z'
                    status: 403
                    error: Forbidden
                    message: У Вас нет прав на выполнение данной операции
                    paths: api/v1/transfer
        '500':
          description: Внутренняя ошибка сервера
          content:
            application/json:
              schema:
                $ref: '#/paths/~1account/get/responses/500/content/application~1json/schema'
              examples:
                InternalServerError:
                  value:
                    timestamp: '2024-09-03T09:50:05Z'
                    status: 500
                    error: Internal Server Error
                    message: Внутренняя ошибка сервера
                    paths: api/v1/transfer
  /account:
    get:
      summary: Информация по счету для расчета комиссии и проверки является ли получатель/отправитель одним клиентом
      operationId: checkAccount
      tags:
        - Account
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: senderId
          description: Идентификатор счета-отправителя
          required: true
          schema:
            type: string
        - in: query
          name: recipientId
          description: Идентификатор счета-получателя
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ОК
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    typeName:
                      type: string
                      example: Премиум
                    internalTransferFeeMin:
                      type: number
                      format: double
                    internalTransferFeeMax:
                      type: number
                      format: double
                    customerBelongs:
                      type: boolean
        '500':
          description: Внутренняя ошибка сервера
          content:
            application/json:
              schema:
                required:
                  - timestamp
                  - status
                  - error
                  - message
                  - path
                type: object
                properties:
                  timestamp:
                    type: string
                    format: date-time
                  status:
                    type: integer
                    example: 500
                  error:
                    type: string
                  message:
                    type: string
                  path:
                    type: string
              examples:
                InternalServerError:
                  value:
                    timestamp: '2024-09-03T09:50:05Z'
                    status: 500
                    error: Internal Server Error
                    message: Внутренняя ошибка сервера
                    paths: api/v1/account
  /transaction:
    post:
      summary: Создание транзакции
      operationId: createTrans
      tags:
        - Transaction
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: senderId
          description: Идентификатор отправителя
          required: true
          schema:
            type: string
        - in: query
          name: senderType
          description: Тип отправителя
          required: true
          schema:
            type: string
        - in: query
          name: recipientType
          description: Тип отправителя
          required: true
          schema:
            type: string
      requestBody:
        required: true
        description: Введите получателя и сумму
        content:
          application/json:
            schema:
              type: object
              properties:
                recipientId:
                  type: string
                amount:
                  type: number
      responses:
        '201':
          description: Транзакция успешно создана
          content:
            application/json:
              schema:
                required:
                  - transactionId
                  - amount
                  - recipientId
                  - senderId
                  - description
                type: object
                properties:
                  transactionId:
                    type: string
                    example: abf1b69f-e2dd-49f1-b5e0-df923f0a9a5f
                  type:
                    type: string
                    enum:
                      - Transfer
                      - Purchase
                      - Payment
                      - Fee
                      - Interest
                  amount:
                    type: number
                    example: 1234.12
                  status:
                    type: string
                    enum:
                      - Waiting
                      - Pending
                      - Completed
                      - Failed
                  createdAt:
                    type: string
                    format: date-time
                  completedAt:
                    type: string
                    format: date-time
                    default: null
                  recipientId:
                    type: string
                    example: abf1b69f-e2dd-49f1-b5e0-df923f0a9a5f
                  recipientType:
                    type: string
                    enum:
                      - Account
                      - DebitCard
                      - CreditAccount
                      - CreditCard
                  senderId:
                    type: string
                    example: abf1b69f-e2dd-49f1-b5e0-df923f0a9a5f
                  senderType:
                    type: string
                    enum:
                      - Account
                      - DebitCard
                      - CreditAccount
                      - CreditCard
                  description:
                    type: string
                    example: Спасибо за перевод
        '401':
          description: Не авторизован
          content:
            application/json:
              schema:
                $ref: '#/paths/~1account/get/responses/500/content/application~1json/schema'
              examples:
                Unauthorized:
                  value:
                    timestamp: '2024-09-03T09:50:05Z'
                    status: 401
                    error: Unauthorized
                    message: Не авторизован
                    paths: api/v1/transaction
        '403':
          description: Нет прав на выполнение
          content:
            application/json:
              schema:
                $ref: '#/paths/~1account/get/responses/500/content/application~1json/schema'
              examples:
                Forbidden:
                  value:
                    timestamp: '2024-09-03T09:50:05Z'
                    status: 403
                    error: Forbidden
                    message: У Вас нет прав на выполнение данной операции
                    paths: api/v1/transaction
        '500':
          description: Внутренняя ошибка сервера
          content:
            application/json:
              schema:
                $ref: '#/paths/~1account/get/responses/500/content/application~1json/schema'
              examples:
                InternalServerError:
                  value:
                    timestamp: '2024-09-03T09:50:05Z'
                    status: 500
                    error: Internal Server Error
                    message: Внутренняя ошибка сервера
                    paths: api/v1/transaction
  /hold-balance:
    patch:
      summary: Заморозка суммы транзакции на счету
      operationId: holdBalance
      tags:
        - HoldBalance
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: transactionId
          description: Идентификатор транзакции
          required: true
          schema:
            type: string
        - in: query
          name: accountId
          description: Идентификатор аккаунта
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                balance:
                  type: number
                balanceHolded:
                  type: number
      responses:
        '200':
          description: Успешно выполнено
          content:
            application/json:
              schema:
                required:
                  - accountId
                  - balance
                type: object
                properties:
                  accountId:
                    type: string
                    example: abf1b69f-e2dd-49f1-b5e0-df923f0a9a5f
                  balance:
                    type: number
                    format: double
                    example: 1234.12
                  balanceHolded:
                    type: number
                    format: double
                    example: 1234.12
        '400':
          description: Некорректный запрос
          content:
            application/json:
              schema:
                $ref: '#/paths/~1account/get/responses/500/content/application~1json/schema'
              examples:
                BadRequest:
                  value:
                    timestamp: '2024-09-03T09:50:05Z'
                    status: 400
                    error: Bad Request
                    message: Некорректный запрос
                    paths: api/v1/hold-balance
        '403':
          description: Нет прав на выполнение
          content:
            application/json:
              schema:
                $ref: '#/paths/~1account/get/responses/500/content/application~1json/schema'
              examples:
                Forbidden:
                  value:
                    timestamp: '2024-09-03T09:50:05Z'
                    status: 403
                    error: Forbidden
                    message: У Вас нет прав на выполнение данной операции
                    paths: api/v1/hold-balance
        '500':
          description: Внутренняя ошибка сервера
          content:
            application/json:
              schema:
                $ref: '#/paths/~1account/get/responses/500/content/application~1json/schema'
              examples:
                InternalServerError:
                  value:
                    timestamp: '2024-09-03T09:50:05Z'
                    status: 500
                    error: Internal Server Error
                    message: Внутренняя ошибка сервера
                    paths: api/v1/hold-balance
